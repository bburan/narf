% function dmsattsum(batchid,reload[=0],recalc[=0])
%
% created SVD 6/21/04 - hacked from kvaparms.m
%
function dmsattsum(batchid,reload,recalc);

dbopen;
sql=['SELECT * FROM sRunData',...
     ' WHERE batch=',num2str(batchid),...
     ' AND not(cellid like "m0000")',...
     ' ORDER BY cellid'];
rundata=mysql(sql);

if length(rundata)==0,
   fprintf('no runs found for batch %d.\n',batchid);
   return
end

batchdata=dbget('sBatch',batchid);

FVBATCHES=[95 96];
RESPATH='/auto/k5/david/tmp/kvaparms/';

resfile=sprintf('%sdmsattsum.batch%d.mat',RESPATH,batchid);
if ~exist('reload','var'),
   reload=0;
end
if ~exist('recalc','var'),
   recalc=0;
end
if ~reload & ~exist(resfile,'file'),
   reload=1;
end

if reload,
   for ii=1:length(rundata),
      if ~exist([rundata(ii).respath,rundata(ii).kernfile,'.gz'],'file'),
         fprintf('%s not found. skipping\n',...
                 [rundata(ii).respath,rundata(ii).kernfile,'.gz']);
      else
         if ismember(batchid,FVBATCHES),
            % hack-- fvvs batches use kvares
            tres=kvares(rundata(ii).cellid,batchid);
         else
            tres=dmsres(rundata(ii).cellid,batchid,'curves');
         end
         
         if isstruct(tres),
            res(ii)=tres;
         end
      end
   end
   
   %keepidx=ones(length(res),1);
   %for ii=1:length(res),
   %   if isempty(res(ii).kernfile),
   %      keepidx(ii)=0;
   %   end
   %end
   %res=res(find(keepidx));
   
   clear ii tres reload recalc
   
   fprintf('saving %s\n',resfile);
   save(resfile);
   recalc=1;
else
   % load previous res data
   fprintf('loading %s\n',resfile);
   load(resfile);
end

cellcount=length(res);
if recalc,
   disp('recalculating tuning curves...');
   disp('only for feature Aa vs Bb');
   %acount=1;
   acount=size(res(1).Hset,2);
   
   hcount=size(res(1).Hset,3);
   obincount=16;
   sfbincount=8;
   ortuning=zeros(obincount,acount,hcount,cellcount);
   sftuning=zeros(sfbincount,acount,hcount,cellcount);
   
   portuning=zeros(obincount,acount,hcount,cellcount);
   psftuning=zeros(sfbincount,acount,hcount,cellcount);
   nortuning=zeros(obincount,acount,hcount,cellcount);
   nsftuning=zeros(sfbincount,acount,hcount,cellcount);
   
   pamp=zeros(acount,hcount,cellcount);
   namp=zeros(acount,hcount,cellcount);
   seprat=zeros(acount,hcount,cellcount);
   orpeak=zeros(acount,hcount,cellcount);
   orbw=zeros(acount,hcount,cellcount);
   porpeak=zeros(acount,hcount,cellcount);
   porbw=zeros(acount,hcount,cellcount);
   norpeak=zeros(acount,hcount,cellcount);
   norbw=zeros(acount,hcount,cellcount);
   sfpeak=zeros(acount,hcount,cellcount);
   sfbw=zeros(acount,hcount,cellcount);
   psfpeak=zeros(acount,hcount,cellcount);
   psfbw=zeros(acount,hcount,cellcount);
   nsfpeak=zeros(acount,hcount,cellcount);
   nsfbw=zeros(acount,hcount,cellcount);
   
   % parms indexed (aidx,hidx)
   % aidx=1 : feature att
   % aidx=2 : spatial att
   % hidx=1:  baseline (ABab)
   % hidx=2:  Aa (aidx=1) or AB (aidx=2)
   % hidx=3:  Bb (aidx=1) or ab (aidx=2)
   
   targorpeak=zeros(acount,cellcount);
   targsfpeak=zeros(acount,cellcount);
   for ii=1:cellcount,
      
      fprintf('%s -  computing target parameters\n',res(ii).cellid);
      for aidx=2:size(res(ii).mpatches,2),
         %tsf0=pfft2sf(res(ii).mpatches(:,aidx)-res(ii).mS(:,1));
         tsf0=pfft2sf(res(ii).mpatches(:,aidx));
         tsf0=sf2gr(tsf0,obincount,sfbincount);
         
         msf=mean(tsf0,1);
         [u,s,v]=svd(tsf0);
         por=u(:,1).*s(1);
         psf=v(:,1).*s(1);
         if psf'*msf'<0,
            por=-por;
            psf=-psf;
         end
         por=por-min(por);
         [targorpeak(aidx-1,ii),torbw]=circstats(por);
         targorpeak(aidx-1,ii)=mod(targorpeak(aidx-1,ii) ./2 .*180/pi,180);
         
         psf=psf-min(psf);
         if sum(psf)>0,
            %targsfpeak(aidx-1,ii)=2.^(log2(sfbins)*psf / sum(psf));
            targsfpeak(aidx-1,ii)=sfbins*psf / sum(psf);
         end
      end
   end
   
   for ii=1:cellcount,
      
      fprintf('%s -  computing tuning curves\n',res(ii).cellid);
      
      for aidx=1:min([acount,size(res(ii).Hset,2)]),
         % figure out mean tuning to adjust sign of tuning curves
         % generated by svd
         tsf0=pfft2sf(mean(res(ii).Hset(:,1,hidx),2));
         tsf0=sf2gr(tsf0,obincount,sfbincount);
         mor=mean(tsf0,2);
         for hidx=1:min([hcount,size(res(ii).Hset,3)]),
            tsfIR=pfft2sf(res(ii).Hset(:,aidx,hidx),'pfft');
            [tsfgr,obins,sfbins]=sf2gr(tsfIR,obincount,sfbincount);
            psfgr=tsfgr.*(tsfgr>0);
            
            [u,s,v]=svd(tsfgr.*(tsfgr>0));
            por=u(:,1).*s(1);
            psf=v(:,1).*s(1);
            if sum(por)<0,
               por=-por; psf=-psf;
            end
            portuning(:,aidx,hidx,ii)=por;
            psftuning(:,aidx,hidx,ii)=psf;
            
            [u,s,v]=svd(tsfgr.*(tsfgr<0));
            por=u(:,1).*s(1);
            psf=v(:,1).*s(1);
            if sum(por)>0,
               por=-por;
            else
               psf=-psf;
            end
            nortuning(:,aidx,hidx,ii)=por;
            nsftuning(:,aidx,hidx,ii)=psf;
            
            pamp(aidx,hidx,ii)=sum(portuning(:,aidx,hidx,ii));
            if ~(aidx==1 & hidx==1) & pamp(1,1,ii)>0,
               pamp(aidx,hidx,ii)=pamp(aidx,hidx,ii)./pamp(1,1,ii);
            end
            namp(aidx,hidx,ii)=-sum(nortuning(:,aidx,hidx,ii))./pamp(1,1,ii);
            
            [u,s,v]=svd(tsfgr);
            if sum(diag(s))>0,
               seprat(aidx,hidx,ii)=s(1)./sum(diag(s));
            end
            por=u(:,1).*s(1);
            psf=v(:,1).*s(1);
            if por'*mor<0,
               por=-por;
               psf=-psf;
            end
            ortuning(:,aidx,hidx,ii)=por(:,1);
            sftuning(:,aidx,hidx,ii)=psf(:,1);
            
            % adjust circstats to deal with extra pi half of circle
            [orpeak(aidx,hidx,ii),orbw(aidx,hidx,ii)]=circstats(por(:,1));
            orbw(aidx,hidx,ii)=orbw(aidx,hidx,ii)./2 .*180/pi.*2; 
            orpeak(aidx,hidx,ii)=mod(orpeak(aidx,hidx,ii) ./2 .*180/pi,180);
            
            [porpeak(aidx,hidx,ii),porbw(aidx,hidx,ii)]=...
                circstats(portuning(:,aidx,hidx,ii));
            porbw(aidx,hidx,ii)=porbw(aidx,hidx,ii)./2 .*180/pi.*2; 
            porpeak(aidx,hidx,ii)=mod(porpeak(aidx,hidx,ii) ./2 .*180/pi,180);
            
            [norpeak(aidx,hidx,ii),norbw(aidx,hidx,ii)]=...
                circstats(-nortuning(:,aidx,hidx,ii));
            norbw(aidx,hidx,ii)=norbw(aidx,hidx,ii)./2 .*180/pi.*2; 
            norpeak(aidx,hidx,ii)=mod(norpeak(aidx,hidx,ii) ./2 .*180/pi,180);
            
            if 0,
               sfnorm=psftuning(:,aidx,hidx,ii);
               if sum(sfnorm)>0,
                  psfpeak(aidx,hidx,ii)=2.^(log2(sfbins)*sfnorm / sum(sfnorm));
               end
               
               sfnorm=-nsftuning(:,aidx,hidx,ii);
               if sum(sfnorm)>0,
                  nsfpeak(aidx,hidx,ii)=2.^(log2(sfbins)*sfnorm / sum(sfnorm));
               end
               
               sfsum=sfnorm.*log2(sfbins(:));
               sfsum(sfsum==0)=min(sfsum(sfsum>0))./1000;
               sfsum=sfsum./(sum(sfsum) + (sum(sfsum)==0));
               sfsum=cumsum(sfsum);
               
               sfpoints=2.^interp1(sfsum,log2(sfbins),[.125 .5 .875]);
               
               % use real center of mass calc (above)
               %sfpeak(aidx,hidx,ii)=sfpoints(2);
               if isnan(sfpoints(1)) & isnan(sfpoints(3)),
                  sfbw1(ii)=nan;
               elseif isnan(sfpoints(1)),
                  sfbw1(ii)=2.*sfpoints(3)./sfpoints(2);
               elseif isnan(sfpoints(3)),
                  sfbw1(ii)=-2.*sfpoints(1)./sfpoints(2);
               else
                  sfbw1(ii)=(sfpoints(3)-sfpoints(1))./sfpoints(2);
                  sfbw1good(ii)=1;
               end
               
               if sfnorm(end)>max(sfnorm)/2,
                  sfbw1good(ii)=-2;      % high-pass
               elseif sfnorm(1)>max(sfnorm)/2,
                  sfbw1good(ii)=-1;      % low-pass
               end
            else
               
               % fit gaussian to psftuning curve
               if sum(abs(sftuning(:,aidx,hidx,ii)))>0
                  beta=fitgauss1d(log2(sfbins),sftuning(:,aidx,hidx,ii));
                  
                  % peak sf tuning is mean of sf tuning curve
                  sfpeak(aidx,hidx,ii)=2.^beta(1);
                  % sf bw defined by de valois is (log2 H2 - log2 L2)
                  sfbw(aidx,hidx,ii)=(beta(2)+beta(2)) .* sqrt(2.*log(2));
               end
               
               % fit gaussian to psftuning curve
               if sum(psftuning(:,aidx,hidx,ii))>0
                  beta=fitgauss1d(log2(sfbins),psftuning(:,aidx,hidx,ii));
                  
                  % peak sf tuning is mean of sf tuning curve
                  psfpeak(aidx,hidx,ii)=2.^beta(1);
                  % sf bw defined by de valois is (log2 H2 - log2 L2)
                  psfbw(aidx,hidx,ii)=(beta(2)+beta(2)) .* sqrt(2.*log(2));
               end
               
               % fit gaussian to nsftuning curve
               if sum(-nsftuning(:,aidx,hidx,ii))>0
                  beta=fitgauss1d(log2(sfbins),-nsftuning(:,aidx,hidx,ii));
                  
                  % peak sf tuning is mean of sf tuning curve
                  nsfpeak(aidx,hidx,ii)=2.^beta(1);
                  % sf bw defined by de valois is (log2 H2 - log2 L2)
                  nsfbw(aidx,hidx,ii)=(beta(2)+beta(2)) .* sqrt(2.*log(2));
               end
            end
         end
      end
   end
   
   clear recalc
   save(resfile);
end

PTHRESH=0.05;

if ismember(batchid,FVBATCHES),
   predxc=cat(3,res.predxc);
   pxc=cat(2,res.pxc)';
   origlocalsig=pxc(:,2:3)<PTHRESH;
   
   ftsig=squeeze(pxc(:,[2 3 5])<PTHRESH);
   
   ftshiftidx=find(ftsig(:,3));
   
   nn=mean(predxc(2,[1 4 5],:),3);
   nnfrac=nn./nn(1);
   fullxc=squeeze(predxc(1,[1 4 5],:)./repmat(nnfrac,[1 1 cellcount]));
   
   tfullxc=fullxc;
   tfullxc(tfullxc<0)=0;
   ftfracs=(tfullxc').^2;
   ftfracs(~ftfracs(:,3),3)=1;
   ftfracs=ftfracs./repmat(ftfracs(:,end),[1 size(ftfracs,2)]);
   ftfracs(ftfracs>1)=1;
   
   ftd=diff(ftfracs(:,:),[],2);
   ftd(ftd<0)=0;
   
   anymodidx=find(sum(ftsig(:,1:3),2));
   ftanymodidx=anymodidx;
   
   disp('mean ftfracs:'); % 0.7796    0.9101    1.0000

   mean(ftfracs(anymodidx,:))
   std(ftfracs(anymodidx,:))./sqrt(length(anymodidx))
   ftd=diff(ftfracs,[],2);
   std(ftd(anymodidx,:))./sqrt(length(anymodidx))
   
   keyboard
   
   return
   
   
else
   predxc=cat(3,res.predxc);
   pxc=cat(2,res.pxc)';
   origlocalsig=pxc(:,2:3)<PTHRESH;
   
   fullxc=cat(3,res.fullxc);
   fullp=cat(3,res.fullp);
   
   ftsig=squeeze(fullp(2:4,2,:)<PTHRESH)';
   spsig=squeeze(fullp(2:4,3,:)<PTHRESH)';
   ftsigin=squeeze(fullp(2:4,4,:)<PTHRESH)';
   ftsigout=squeeze(fullp(2:4,5,:)<PTHRESH)';
   
   tfullxc=fullxc;
   tfullxc(tfullxc<0)=0;
   ftfracs=(squeeze(tfullxc(:,2,:))').^2;
   spfracs=(squeeze(tfullxc(:,3,:))').^2;
   ftfracs(~ftfracs(:,4),4)=1;
   spfracs(~spfracs(:,4),4)=1;
   ftfracs=ftfracs./repmat(ftfracs(:,end),[1 size(ftfracs,2)]);
   spfracs=spfracs./repmat(spfracs(:,end),[1 size(spfracs,2)]);
   ftfracs(ftfracs>1)=1;
   spfracs(spfracs>1)=1;
   
   ftd=diff(ftfracs(:,[1 3 4]),[],2);
   spd=diff(spfracs(:,[1 3 4]),[],2);
   ftd(ftd<0)=0;
   spd(spd<0)=0;
   
   anymodidx=find(sum([ftsig(:,1:3) spsig(:,1:3)],2));
   spanymodidx=find(sum([spsig(:,1:3)],2));
   ftanymodidx=find(sum([ftsig(:,1:3)],2));
   mean([ftfracs(anymodidx,[1 2 3 4]) spfracs(anymodidx,[1 2 3 4])])
   [mean(ftfracs(ftanymodidx,[1 2 3 4])) ...
    mean(spfracs(spanymodidx,[1 2 3 4])) ]
   
   globaldc=cat(3,res.globaldc);
   globaldconly=cat(3,res.globaldconly);
   globalgain=cat(3,res.globalgain);
   dc=squeeze(mean(globaldc(2:3,:,:),2));
   gg=squeeze(mean(globalgain(2:3,:,:),2));
   
end


figure(1);
clf

subplot(2,2,1);
plot([-5 5],[0 0],'k--');
hold on
plot([0 0],[-0.5 0.5],'k--');
plot(dc(1,find(~ftsig(:,2))),gg(1,find(~ftsig(:,2))),'b.');
plot(dc(1,find(ftsig(:,2))),gg(1,find(ftsig(:,2))),'ro');
plot(dc(1,find(origlocalsig(:,1))),gg(1,find(origlocalsig(:,1))),'k+');
plot(-dc(1,find(~ftsig(:,2))),-gg(1,find(~ftsig(:,2))),'b.');
plot(-dc(1,find(ftsig(:,2))),-gg(1,find(ftsig(:,2))),'ro');
plot(-dc(1,find(origlocalsig(:,1))),-gg(1,find(origlocalsig(:,1))),'k+');
hold off
axis([-5 5 -0.5 0.5]);
axis square
xlabel('dc shift');
ylabel('gain');
title('dms - feature attention');

subplot(2,2,2);
plot([-5 5],[0 0],'k--');
hold on
plot([0 0],[-0.5 0.5],'k--');
plot(dc(2,find(~spsig(:,2))),gg(2,find(~spsig(:,2))),'b.');
plot(dc(2,find(spsig(:,2))),gg(2,find(spsig(:,2))),'ro');
plot(dc(2,find(origlocalsig(:,2))),gg(2,find(origlocalsig(:,2))),'k+');
hold off
axis([-5 5 -0.5 0.5]);
axis square
xlabel('dc shift');
ylabel('gain');
title('dms - spatial attention');

sigidx=find(sum([ftsig(:,2:3) spsig(:,2:3)],2)>0);
%vsigidx=squeeze(predxc(1,1,:)>cat(3,res.randxc).*2);
vsigidx=(1:size(ftsig,1))';
fsigidx=find(sum([ftsig(:,2:3)],2)>0 & vsigidx);
ssigidx=find(sum([spsig(:,2:3)],2)>0 & vsigidx);


strfrank=cat(3,res.strfrank);
strfattrankmean=squeeze(mean([strfrank(1,2,:); strfrank(2,3,:)]));
strfattrankmin=squeeze(min([strfrank(1,2,:); strfrank(2,3,:)]));
strfattrankdiff=squeeze(abs([strfrank(1,2,:)-strfrank(2,3,:)]));
strfattrankchange=[squeeze(([strfrank(1,2,:)-strfrank(1,3,:)])) ...
                   squeeze(([strfrank(2,3,:)-strfrank(2,2,:)]))];
strfbaserankmean=squeeze(mean([strfrank(1,1,:); strfrank(2,1,:)]));
strfbaserankmin=squeeze(min([strfrank(1,1,:); strfrank(2,1,:)]));
strfbaserankdiff=squeeze(abs([strfrank(1,1,:)-strfrank(2,1,:)]));
obsrank=cat(3,res.rank);
obsattrankmean=squeeze(mean([obsrank(1,2,:); obsrank(2,3,:)]));
obsattrankmin=squeeze(min([obsrank(1,2,:); obsrank(2,3,:)]));
obsattrankdiff=squeeze(abs([obsrank(1,2,:)-obsrank(2,3,:)]));
obsbaserankmean=squeeze(mean([obsrank(1,1,:); obsrank(2,1,:)]));
obsbaserankmin=squeeze(min([obsrank(1,1,:); obsrank(2,1,:)]));
obsbaserankdiff=squeeze(abs([obsrank(1,1,:)-obsrank(2,1,:)]));
obsattrankchange=[squeeze(([obsrank(1,2,:)-obsrank(1,3,:)])) ...
                   squeeze(([obsrank(2,3,:)-obsrank(2,2,:)]))];

a=[obsattrankchange squeeze(obsrank(1,2,:)) squeeze(obsrank(2,3,:)) ...
   squeeze(strfrank(1,2,:)) squeeze(strfrank(2,3,:))];
fprintf('dmsattsum(%d): %s\n',batchid,date);
fprintf('CELL     OBS RANK   SRF RANK      FEATURE ATT       SPATIAL ATT\n');
for ii=1:length(res),
   fprintf('%-7s  %5.3f %5.3f %6.3f %6.3f   %5.3f %5.3f %d%d-%d  %5.3f %5.3f %d%d-%d\n',...
           res(ii).cellid,a(ii,3:6),...
           ftd(ii,:),ftsig(ii,2:3),origlocalsig(ii,1),...
           spd(ii,:),spsig(ii,2:3),origlocalsig(ii,2));
end

disp('this seems like good support for feature=local, spatial=separable');
[mean(ftd(fsigidx,:)) mean(spd(ssigidx,:))]
sum([ftsig(vsigidx,2:3) spsig(vsigidx,2:3)])./length(vsigidx)


mstrfattrankchange=mean(strfattrankchange,2);
mobsattrankchange=mean(obsattrankchange,2);

catidx=ones(length(ftsig),1)*3;
%catidx(find(predxc(1,1,:)<cat(3,res.randxc).*2))=4;
catidx(find(ftsig(:,2)|ftsig(:,1)))=2;
catidx(find(ftsig(:,3)))=1;

varnames={'mstrfattrankchange','mobsattrankchange',...
          'strfattrankmean','strfattrankdiff','strfattrankmin',...
          'strfbaserankmean','strfbaserankdiff','strfbaserankmin',...
          'obsattrankmean','obsattrankdiff','obsattrankmin',...
          'obsbaserankmean','obsbaserankdiff','obsbaserankmin'};

disp('figure out if these statistics work for su-so');
for ii=1:length(varnames),
   mn=zeros(2,1);
   for jj=1:3,
      mn(1,jj)=eval(sprintf('mean(%s(find(catidx==%d)))',...
                            varnames{ii},jj));
      mn(2,jj)=eval(sprintf('std(%s(find(catidx==%d)))./%f',...
                            varnames{ii},jj,sqrt(sum(catidx==jj))));
      %mn(2,jj)=eval(sprintf('median(%s(find(catidx==%d)))',...
      %                      varnames{ii},jj));
   end
   fprintf('%16s : mean: %5.2f %5.2f %5.2f   ste : %5.3f %5.3f %5.3f\n',...
           varnames{ii},mn');
end

figure(1);

pset=cat(3,res.pset).*60;
rset=cat(3,res.rset).*60;

% spsig(:,2) tells if significant dcg modulation
vsigidx=squeeze(predxc(1,1,:)>cat(3,res.randxc).*3);
%vsigidx=ones(size(spsig,1),1);

suseidx=find(vsigidx);
fuseidx=find(vsigidx);

%fuseidx=find(ftsig(:,3) & vsigidx);

suseidx=find((spsig(:,2)|spsig(:,3)) & vsigidx);
fuseidx=find((ftsig(:,2)|ftsig(:,3)) & vsigidx);

%suseidx=find((spsig(:,2)|ftsig(:,2)) & vsigidx);
%suseidx=find((spsig(:,2)|spsig(:,3)|ftsig(:,2)|ftsig(:,3)) & vsigidx);
%fuseidx=suseidx;

if 1,
   s_p=pset(:,1,suseidx);
   s_r1=mean(rset(:,1:2,suseidx),2);
   s_r2=mean(rset(:,3:4,suseidx),2);
   for ii=1:length(suseidx),
      %pmin=s_p(1,1,ii);
      %pnorm=s_p(end,1,ii)-s_p(1,1,ii);
      pmin=0;
      pnorm=1;
      s_r1(:,:,ii)=(s_r1(:,:,ii)-pmin)./pnorm;
      s_r2(:,:,ii)=(s_r2(:,:,ii)-pmin)./pnorm;
      s_p(:,:,ii)=(s_p(:,:,ii)-pmin)./pnorm;
   end
   
   f_p=pset(:,1,fuseidx);
   f_r1=zeros(size(f_p));
   f_r2=zeros(size(f_p));
   
   trr=cat(3,res.resp);
   trr=(trr(:,1,:));
   for ii=1:length(fuseidx),
      %pmin=f_p(1,1,ii);
      %pnorm=f_p(end,1,ii)-f_p(1,1,ii);
      pmin=0;
      pnorm=1;
      % class stronger responding attention state as "better"
      %if sum(rset(:,1,fuseidx(ii))-rset(:,2,fuseidx(ii)))>0,
      if (trr(1,1,fuseidx(ii))-trr(2,1,fuseidx(ii)))>0,
         f_r1(:,:,ii)=(mean(rset(:,[1 3],fuseidx(ii)),2)-pmin)./pnorm;
         f_r2(:,:,ii)=(mean(rset(:,[2 4],fuseidx(ii)),2)-pmin)./pnorm;
      else
         f_r1(:,:,ii)=(mean(rset(:,[2 4],fuseidx(ii)),2)-pmin)./pnorm;
         f_r2(:,:,ii)=(mean(rset(:,[1 3],fuseidx(ii)),2)-pmin)./pnorm;
      end
      f_p(:,1,(ii))=(f_p(:,1,ii)-pmin)./pnorm;
   end
   
   % bin the data
   bincount=10;
   dd=zeros(bincount,3,2);
   ee=zeros(bincount,3,2);
   
   s_r1=s_r1(~isnan(s_p));
   s_r2=s_r2(~isnan(s_p));
   s_p=s_p(~isnan(s_p));
   
   slideamt=1;
   maxbinfrac=0.82;
   maxbin=max([s_p(:);f_p(:)]).*maxbinfrac;
   
   ss=sort(s_p(:));
   %bins=ss(round(linspace(1,round(length(ss).*maxbinfrac),bincount+slideamt)));
   bins=(linspace(0,max([s_p(:)]).*maxbinfrac,bincount+slideamt));
   %bins(end)=max(ss).*0.75;
   bins(end)=max([s_p(:);f_p(:)]).*0.99;
   for bb=1:bincount,
      bbidx=find(s_p(:)>bins(bb) & s_p(:)<=bins(bb+slideamt));
      dd(bb,1,1)=mean(s_p(bbidx));
      dd(bb,2,1)=mean(s_r1(bbidx));
      dd(bb,3,1)=mean(s_r2(bbidx));
      ee(bb,1,1)=std(s_r1(bbidx)-s_r2(bbidx))./sqrt(length(bbidx));
      ee(bb,2,1)=std(s_r1(bbidx))./sqrt(length(bbidx));
      ee(bb,3,1)=std(s_r2(bbidx))./sqrt(length(bbidx));
   end
   
   f_r1=f_r1(~isnan(f_p));
   f_r2=f_r2(~isnan(f_p));
   f_p=f_p(~isnan(f_p));
   ff=sort(f_p(:));
   %bins=ff(round(linspace(1,round(length(ff).*maxbinfrac),bincount+slideamt)));
   bins=(linspace(0,max([f_p(:)]).*maxbinfrac,bincount+slideamt));
   %bins(end)=max(ff).*0.75;
   bins(end)=max([s_p(:);f_p(:)]).*0.99;
   for bb=1:bincount,
      bbidx=find(f_p(:)>bins(bb) & f_p(:)<=bins(bb+slideamt));
      dd(bb,1,2)=mean(f_p(bbidx));
      dd(bb,2,2)=mean(f_r1(bbidx));
      dd(bb,3,2)=mean(f_r2(bbidx));
      ee(bb,1,2)=std(f_r1(bbidx)-f_r2(bbidx))./sqrt(length(bbidx));
      ee(bb,2,2)=std(f_r1(bbidx))./sqrt(length(bbidx));
      ee(bb,3,2)=std(f_r2(bbidx))./sqrt(length(bbidx));
   end
   %dd=reshape(resample(dd,1,3),bincount/3,3,2);
   %ee=reshape(resample(ee,1,3),bincount/3,3,2);
   
   ht=[];
   sfigure(1);
   
   subplot(2,3,4);
   ht=[ht errorbar(dd(:,1,2),dd(:,2,2),ee(:,2,2),'r-')];
   hold on
   ht=[ht errorbar(dd(:,1,2),dd(:,3,2),ee(:,3,2),'k-')];
   hold off
   
   subplot(2,3,5);
   ht=[ht errorbar(dd(:,1,1),dd(:,2,1),ee(:,2,1),'g-')];
   hold on
   ht=[ht errorbar(dd(:,1,1),dd(:,3,1),ee(:,3,1),'b-')];
   hold off
   
   subplot(2,3,6);
   %ht=[ht errorbar(dd(:,1,1),dd(:,2,1)-dd(:,3,1),ee(:,1,1).*2,'g-')];
   ht=[ht errorbar(mean(dd(:,2:3,1),2),dd(:,2,1)-dd(:,3,1),ee(:,1,1).*2,'g-')];
   hold on
   %ht=[ht errorbar(dd(:,1,2),dd(:,2,2)-dd(:,3,2),ee(:,1,2).*2,'r-')];
   ht=[ht errorbar(mean(dd(:,2:3,2),2),dd(:,2,2)-dd(:,3,2),ee(:,1,2).*2,'r-')];
   ht=[ht plot([min(min(dd(:,1,:))) max(max(dd(:,1,:)))],[0 0],'k--')];
   hold off
   a=axis;
   axis([0 max(max(dd(:,1,:))).*1.05 a(3:4)])
   set(ht,'LineWidth',2);
   title('avg change per linear pred, ft v sp');
 else
   sbaselinepred=mean(pset(:,1,suseidx),3);
   sbaselineresp=mean(mean(rset(:,1:4,suseidx),3),2);
   sdcgrespin=zeros(size(sbaselinepred));
   sdcgrespout=zeros(size(sbaselinepred));
   
   for ii=1:length(suseidx),
      pnorm=1; 
      %pnorm=max(pset(:,suseidx(ii)));
      sdcgrespin=sdcgrespin+mean(rset(:,1:2,suseidx(ii)),2)./pnorm;
      sdcgrespout=sdcgrespout+mean(rset(:,3:4,suseidx(ii)),2)./pnorm;
   end
   sdcgrespin=sdcgrespin./length(suseidx);
   sdcgrespout=sdcgrespout./length(suseidx);
   if pnorm~=1,
      sbaselinepred=sbaselinepred./max(sbaselinepred);
   end
   
   subplot(2,2,3);
   plot(sbaselinepred,sdcgrespin,'g-');
   hold on
   plot(sbaselinepred,sdcgrespout,'b-');
   plot(sbaselinepred,sbaselinepred,'k:');
   hold off
   axis([min(sbaselinepred).*0.9 max(sbaselinepred).*1.1 ...
         min(sbaselinepred).*0.8 max(sbaselinepred).*1.2]);
   
   sbaselinepred=mean(pset(:,1,fuseidx),3);
   sbaselineresp=mean(mean(rset(:,1:2,fuseidx),3),2);
   sdcgrespbetter=zeros(size(sbaselinepred));
   sdcgrespworse=zeros(size(sbaselinepred));
   
   for ii=1:length(fuseidx),
      pnorm=1;
      %pnorm=max(pset(:,fuseidx(ii)));
      if sum(rset(:,1,fuseidx(ii))-rset(:,2,fuseidx(ii)))>0,
         %sdcgrespbetter=sdcgrespbetter+mean(rset(:,[1 3],fuseidx(ii)),2)./pnorm;
         %sdcgrespworse=sdcgrespworse+mean(rset(:,[2 4],fuseidx(ii)),2)./pnorm;
         sdcgrespbetter=sdcgrespbetter+rset(:,1,fuseidx(ii))./pnorm;
         sdcgrespworse=sdcgrespworse+rset(:,2,fuseidx(ii))./pnorm;
      else
         %sdcgrespbetter=sdcgrespbetter+mean(rset(:,[2 4],fuseidx(ii)),2)./pnorm;
         %sdcgrespworse=sdcgrespworse+mean(rset(:,[1 3],fuseidx(ii)),2)./pnorm;
         sdcgrespbetter=sdcgrespbetter+rset(:,2,fuseidx(ii))./pnorm;
         sdcgrespworse=sdcgrespworse+rset(:,1,fuseidx(ii))./pnorm;
      end
   end
   sdcgrespbetter=sdcgrespbetter./length(fuseidx);
   sdcgrespworse=sdcgrespworse./length(fuseidx);
   if pnorm~=1,
      sbaselinepred=sbaselinepred./max(sbaselinepred);
   end
   
   subplot(2,2,4);
   plot(sbaselinepred,sdcgrespbetter,'r-');
   hold on
   plot(sbaselinepred,sdcgrespworse,'k-');
   plot(sbaselinepred,sbaselinepred,'k:');
   hold off
   axis([min(sbaselinepred).*0.9 max(sbaselinepred).*1.1 ...
         min(sbaselinepred).*0.8 max(sbaselinepred).*1.2]);
end

if 0,
   subplot(2,2,4);
   catidx=ones(length(ftsig),1)*2;
   %catidx(find(ftsig(:,2)))=1;
   catidx(find(ftsig(:,3)))=1;
   corrcomp(strfattrankmean,ftd(:,2),...
            'mean rank','frac local',[],catidx);
end

fullpage landscape

figure(2);

ftindepdiff=ftfracs(:,3)-ftfracs(:,1);
subplot(2,3,1);
histcomp(ftindepdiff((ftsig(:,1)|ftsig(:,2))),...
         ftindepdiff(setdiff(anymodidx,find(ftsig(:,1)|ftsig(:,2)))),...
         'ft indep','','xc',[-0.5 0.5 0 40]);

ftdepdiff=ftfracs(:,4)-ftfracs(:,3);
subplot(2,3,2);
histcomp(ftdepdiff(ftsig(:,3)),...
         ftdepdiff(setdiff(anymodidx,find(ftsig(:,3)))),...
         'ft tuning','','xc',[-0.5 0.5 0 40]);

spindepdiff=spfracs(:,3)-spfracs(:,1);
subplot(2,3,4);
histcomp(spindepdiff((spsig(:,1)|spsig(:,2))),...
         spindepdiff(setdiff(anymodidx,find(spsig(:,1)|spsig(:,2)))),...
         'sp indep','','xc',[-0.5 0.5 0 40]);

spdepdiff=spfracs(:,4)-spfracs(:,3);
subplot(2,3,5);
histcomp(spdepdiff(spsig(:,3)),...
         spdepdiff(setdiff(anymodidx,find(spsig(:,3)))),...
         'sp tuning','','xc',[-0.5 0.5 0 40]);


subplot(2,3,3);
ftdepdiff(ftdepdiff<0)=0;
ftindepdiff(ftindepdiff<0)=0;
spdepdiff(spdepdiff<0)=0;
spindepdiff(spindepdiff<0)=0;
ftfrac=ftdepdiff./(ftindepdiff+ftdepdiff+(ftindepdiff+ftdepdiff==0));
spfrac=spdepdiff./(spindepdiff+spdepdiff+(spindepdiff+spdepdiff==0));
ftfrac(isinf(ftfrac) | ftfrac>1)=1;
ftfrac(isnan(ftfrac))=0;
spfrac(isinf(spfrac) | spfrac>1)=1;
spfrac(isnan(spfrac))=0;

nf=hist(ftfrac(ftanymodidx),8);
ns=hist(spfrac(spanymodidx),8);
bar(linspace(0,1,8),[nf; ns]');
colormap(gray)
title('ratio of indep to tuning per cell');
a=axis;
axis([-0.2 1.2 a(3:4)]);

[mftfrac,eftfrac]=jackmeanerr(ftfrac(ftanymodidx),1000);
[mspfrac,espfrac]=jackmeanerr(spfrac(spanymodidx),1000);

ftdcdiff=ftfracs(:,2)-ftfracs(:,1);
ftgndiff=ftfracs(:,3)-ftfracs(:,2);
spdcdiff=spfracs(:,2)-spfracs(:,1);
spgndiff=spfracs(:,3)-spfracs(:,2);

mmsplitall=zeros(6,1);
eesplitall=zeros(6,1);
psplit=zeros(3,1);
[mmsplitall(1),eesplitall(1)]=jackmeanerr(ftdcdiff(anymodidx),1000);
[mmsplitall(2),eesplitall(2)]=jackmeanerr(spdcdiff(anymodidx),1000);
[mmsplitall(3),eesplitall(3)]=jackmeanerr(ftgndiff(anymodidx),1000);
[mmsplitall(4),eesplitall(4)]=jackmeanerr(spgndiff(anymodidx),1000);
[mmsplitall(5),eesplitall(5)]=jackmeanerr(ftdepdiff(anymodidx),1000);
[mmsplitall(6),eesplitall(6)]=jackmeanerr(spdepdiff(anymodidx),1000);

[psplit(1),m,s]=randpairtest(ftdcdiff(anymodidx),spdcdiff(anymodidx),...
                             5000,1,'mean');
[psplit(2),m,s]=randpairtest(ftgndiff(anymodidx),spgndiff(anymodidx),...
                             5000,1,'mean');
[psplit(3),m,s]=randpairtest(ftdepdiff(anymodidx),spdepdiff(anymodidx),...
                             5000,-1,'mean');

mmsplitall=[mean([ftdcdiff(anymodidx)]) ...
    mean([spdcdiff(anymodidx)]) ...
    mean([ftgndiff(anymodidx)]) ...
    mean([spgndiff(anymodidx)]) ...
    mean([ftdepdiff(anymodidx)]) ...
    mean([spdepdiff(anymodidx)]) ];
eesplitall=[std([ftdcdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([spdcdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([ftgndiff(anymodidx)]./sqrt(length(anymodidx))) ...
    std([spgndiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([ftdepdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([spdepdiff(anymodidx)])./sqrt(length(anymodidx)) ];
mmsplit=[mean([ftdcdiff(ftanymodidx)]) ...
    mean([spdcdiff(spanymodidx)]) ...
    mean([ftgndiff(ftanymodidx)]) ...
    mean([spgndiff(spanymodidx)]) ...
    mean([ftdepdiff(ftanymodidx)]) ...
    mean([spdepdiff(spanymodidx)]) ];
eesplit=[std([ftdcdiff(ftanymodidx)])./sqrt(length(ftanymodidx)) ...
    std([spdcdiff(spanymodidx)])./sqrt(length(spanymodidx)) ...
    std([ftgndiff(ftanymodidx)])./sqrt(length(ftanymodidx)) ...
    std([spgndiff(spanymodidx)])./sqrt(length(spanymodidx)) ...
    std([ftdepdiff(ftanymodidx)])./sqrt(length(ftanymodidx)) ...
    std([spdepdiff(spanymodidx)])./sqrt(length(spanymodidx)) ];

mmall=[mean([ftindepdiff(anymodidx)]) ...
    mean([spindepdiff(anymodidx)]) ...
    mean([ftdepdiff(anymodidx)]) ...
    mean([spdepdiff(anymodidx)]) ];
eeall=[std([ftindepdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([spindepdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([ftdepdiff(anymodidx)])./sqrt(length(anymodidx)) ...
    std([spdepdiff(anymodidx)])./sqrt(length(anymodidx)) ];

fvvssig=[[ones(39,1);zeros(87-39,1)] [ones(22,1);zeros(87-22,1)]];

mm=[mean([ftindepdiff(ftanymodidx)]) ...
    mean([spindepdiff(spanymodidx)]) ...
    mean([ftdepdiff(ftanymodidx)]) ...
    mean([spdepdiff(spanymodidx)]) ];
[nn,nnee]=jackmeanerr([(ftsig(:,1)|ftsig(:,2)) (spsig(:,1)|spsig(:,2)) ...
    (ftsig(:,3)) (spsig(:,3))])
[fnn,fnnee]=jackmeanerr(fvvssig)

nn=[nn(1) fnn(1) nn(2:3) fnn(2) nn(4)];
nnee=[nnee(1) fnnee(1) nnee(2:3) fnnee(2) nnee(4)];

figure(2);
subplot(2,3,3);
errorbar(nn,nnee,'k+');
hold on
bar(nn);
hold off

title('fraction of neurons modulated (ft-sp,dc-gn-lo');

subplot(2,3,6);
errorbar(mmsplitall,eesplitall,'k+');
hold on
bar(mmsplitall);
hold off

title('fraction of variance explained (ft-sp,dc-gn-lo');


resp=cat(3,res.resp);
resperr=cat(3,res.resperr);
%resp=cat(3,res.strfresp);
%tt1=find(resp(1,2,:)>resp(2,3,:));
%tt2=find(resp(1,2,:)<resp(2,3,:));
tt1=find(resp(1,1,:)>resp(2,1,:));
tt2=find(resp(1,1,:)<resp(2,1,:));
tt1s=squeeze(resp(1,1,:)-resperr(1,1,:)>resp(2,1,:)+resperr(2,1,:));
tt2s=squeeze(resp(1,1,:)+resperr(1,1,:)<resp(2,1,:)-resperr(2,1,:));

rio=zeros(cellcount,2,2);
rio(tt1,1,1)=squeeze(resp(1,2,tt1)); % better stim, att toward
rio(tt1,2,1)=squeeze(resp(2,3,tt1)); % worse stim, att toward
rio(tt2,1,1)=squeeze(resp(2,3,tt2)); % better stim, att toward
rio(tt2,2,1)=squeeze(resp(1,2,tt2)); % worse stim, att toward
rio(tt1,1,2)=squeeze(resp(1,3,tt1)); % better stim, att away
rio(tt1,2,2)=squeeze(resp(2,2,tt1)); % worse stim, att away
rio(tt2,1,2)=squeeze(resp(2,2,tt2)); % better stim, att away
rio(tt2,2,2)=squeeze(resp(1,3,tt2)); % worse stim, att away
rerr=zeros(cellcount,2,2);
rerr(tt1,1,1)=squeeze(resperr(1,2,tt1)); % better stim, att toward
rerr(tt1,2,1)=squeeze(resperr(2,3,tt1)); % worse stim, att toward
rerr(tt2,1,1)=squeeze(resperr(2,3,tt2)); % better stim, att toward
rerr(tt2,2,1)=squeeze(resperr(1,2,tt2)); % worse stim, att toward
rerr(tt1,1,2)=squeeze(resperr(1,3,tt1)); % better stim, att away
rerr(tt1,2,2)=squeeze(resperr(2,2,tt1)); % worse stim, att away
rerr(tt2,1,2)=squeeze(resperr(2,2,tt2)); % better stim, att away
rerr(tt2,2,2)=squeeze(resperr(1,3,tt2)); % worse stim, att away

celltype=zeros(cellcount,1);
ce=0;
celltype(rio(:,1,1)>=rio(:,1,2) & ...
         rio(:,2,1)+rerr(:,2,1).*ce>=rio(:,2,2)-rerr(:,2,2).*ce)=1;
celltype(rio(:,1,1)>=rio(:,1,2) & ...
         rio(:,2,1)+rerr(:,2,1).*ce<rio(:,2,2)-rerr(:,2,2).*ce)=2;
celltype(rio(:,1,1)<rio(:,1,2) & ...
         rio(:,2,1)-rerr(:,2,1).*ce>=rio(:,2,2)+rerr(:,2,2).*ce)=3;
celltype(rio(:,1,1)<rio(:,1,2) & ...
         rio(:,2,1)-rerr(:,2,1).*ce<rio(:,2,2)+rerr(:,2,2).*ce)=4;
pcelltype=celltype;

catidx=ones(length(ftsig),1)*3;
%catidx(find(predxc(1,1,:)<cat(3,res.randxc).*2))=4;
catidx(find(ftsig(:,1)|ftsig(:,2)))=2;
catidx(find(ftsig(:,3)))=1;

shifttest=abs(diff(rio,1,3))>sum(rerr,3);
bothsignif=sum(shifttest,2)==2;
%bothsignif(:)=1;
%onesignif=sum(shifttest,2)==1;
onesignif=shifttest(:,1) & ~bothsignif;
twosignif=shifttest(:,2) & ~bothsignif;
%onesignif=1-bothsignif;



% matched filter -- population analyses


mresp=cat(3,res.mresp);
mr=mean(resp(:,1,:));
strfresp=cat(3,res.strfresp);
%strfrank=strfresp;
%strfrank=(strfresp./repmat(mresp(1,1,:),[2 3]));
strfrank=cat(3,res.strfrank);
resp=cat(3,res.resp);
rank=resp;
%rank=(resp./repmat(mresp(1,1,:),[2 3]));
%rank=cat(3,res.rank);

featgain=squeeze(mean(globalgain(2,:,:),2));
gainattrankchange=[squeeze(resp(1,1,:)-mresp(1,1,:)./60).*featgain.*2 ...
                  -squeeze(resp(2,1,:)-mresp(1,1,:)./60).*featgain.*2]

strfranka=cat(4,res.strfranka);
sara=cat(3,squeeze(([strfranka(1,2,:,:)-strfranka(1,3,:,:)])), ...
         squeeze(([strfranka(2,3,:,:)-strfranka(2,2,:,:)])));
sm=squeeze(mean(mean(sara,3)>0,1))';
se=squeeze(std(mean(sara,3)>0,0,1))'*sqrt(size(sara,1)-1);

strfattrankchange=[squeeze(([strfrank(1,2,:)-strfrank(1,3,:)])) ...
                   squeeze(([strfrank(2,3,:)-strfrank(2,2,:)]))];
strfattrespchange=[squeeze(([strfresp(1,2,:)-strfresp(1,3,:)])) ...
                   squeeze(([strfresp(2,3,:)-strfresp(2,2,:)]))];

obsattrespchange=[squeeze(([resp(1,2,:)-resp(1,3,:)])) ...
                  squeeze(([resp(2,3,:)-resp(2,2,:)]))];
obsattrankchange=[squeeze(([rank(1,2,:)-rank(1,3,:)])) ...
                  squeeze(([rank(2,3,:)-rank(2,2,:)]))];


gainattrankchange(tt2,:)=fliplr(gainattrankchange(tt2,:));
strfattrankchange(tt2,:)=fliplr(strfattrankchange(tt2,:));
%obsattrankchange(tt2,:)=fliplr(obsattrankchange(tt2,:));
obsattrespchange(tt2,:)=fliplr(obsattrankchange(tt2,:));

meantarxc=zeros(3,1);
stdtarxc=zeros(3,1);

meanstrfresp=zeros(3,1);
meanobsresp=zeros(3,1)
meangainchange=zeros(3,1)

stdstrfresp=zeros(3,1);
stdobsresp=zeros(3,1)
stdgainchange=zeros(3,1)

h11=squeeze(strfrank(1,2,:));
h12=squeeze(strfrank(1,3,:));
h21=squeeze(strfrank(2,2,:));
h22=squeeze(strfrank(2,3,:));

tsi=(h11 + h22 - h12 - h21)./(2- h12 -h21);

xx=linspace(-0.6,0.6,10);
nxc=zeros(length(xx),2,3);
for ii=1:3,
   %ms=strfattrankchange(catidx==ii,:);
   ms=tsi(catidx==ii);
   [meantarxc(ii),stdtarxc(ii)]=jackmeanerr([ms(:)],15);
   
   ms1=strfattrankchange(catidx==ii & sm>0.5 & sm>2.*se,:);
   nxc(:,1,ii)=hist(mean(ms1,2),xx);
   ms2=strfattrankchange(catidx==ii & sm<0.5 & sm<2.*se,:);
   nxc(:,2,ii)=hist(mean(ms2,2),xx);
   ms3=strfattrankchange(catidx==ii & (abs(sm)<=2.*se),:);
   nxc(:,3,ii)=hist(mean(ms3,2),xx);
   
   ms=strfattrespchange(catidx==ii,:);
   [meanstrfresp(ii),stdstrfresp(ii)]=jackmeanerr([ms(:)],15);
   
   ms=gainattrankchange(catidx==ii,:);
   [meangainchange(ii),stdgainchange(ii)]=jackmeanerr([ms(:)],15);
   
   tt=obsattrespchange(catidx==ii & bothsignif,:);
   t2=obsattrespchange(catidx==ii & onesignif,:);
   t3=obsattrespchange(catidx==ii & twosignif,2);
   ms=[tt(:);t2(:)];
   [meanobsresp(ii),stdobsresp(ii)]=jackmeanerr([ms(:)],15);
   %%meanobsresp(ii)=mean(ms(:));
   %stdobsresp(ii)=std(ms(:))./sqrt(length(ms(:)));
   
end

figure(3);
clf

subplot(2,2,1);
bar(xx,nxc(:,:,1),'stacked')
hold on
aa=axis;
plot([0 0],[aa(3) aa(4)],'k--');
hold off
axis([xx(1)-0.1 xx(end)+0.1 aa(3:4)]);
title('difference dot product (tonly)');

dc=squeeze(mean(globaldc(2:3,:,:),2))';
dc2=squeeze(mean(globaldconly(2:3,:,:),2))';
gg=squeeze(mean(globalgain(2:3,:,:),2))';
% swap sign to make all dcg coeffients reflec T1-T2
% ie, preferred minus non-preferred target
dc(tt2,1)=-dc(tt2,1);
dc2(tt2,1)=-dc2(tt2,1);
gg(tt2,1)=-gg(tt2,1);

% dc shift as fraction of mean firing rate
dc=dc./repmat(squeeze(mresp(1,1,:)),[1 2]);
dc2=dc2./repmat(squeeze(mresp(1,1,:)),[1 2]);

useidx=find(ftsig(:,1)|ftsig(:,2)|spsig(:,1)|spsig(:,2));
useidx1=find(ftsig(:,1));
useidx2=find(spsig(:,1) );
useidx3=find(ftsig(:,2) );
useidx4=find(spsig(:,2) );
meanshift=[mean(dc2(useidx1,1)) mean(dc2(useidx2,2));
           mean(gg(useidx3,1)) mean(gg(useidx4,2))]
stdshift=[std(dc2(useidx1,1))./sqrt(length(useidx1)) ...
          std(dc2(useidx2,2))./sqrt(length(useidx2));
          std(gg(useidx3,1))./sqrt(length(useidx3)) ...
          std(gg(useidx4,2))./sqrt(length(useidx4))];


subplot(2,2,2);
errorbar(meanshift,stdshift,'k+');
hold on
hb=bar(meanshift);
hold off
title('pred resp diff (t,dcg,nm)');

subplot(2,2,3);
errorbar(meanstrfresp,stdstrfresp,'k+');
hold on
hb=bar(meanstrfresp);
hold off
title('pred resp diff (t,dcg,nm)');

subplot(2,2,4);
errorbar(meanobsresp,stdobsresp,'k+');
hold on
hb=bar(meanobsresp);
hold off
title('obs resp diff (t,dcg,nm)');

colormap(gray);



if 0,

   n1=hist(celltype(find(catidx==1 & bothsignif)),4);
   n1a=hist(celltype(find(catidx==1 & onesignif)),4);
   n2=hist(celltype(find(catidx==2 & bothsignif)),4);
   n2a=hist(celltype(find(catidx==2 & onesignif)),4);
   n3=hist(celltype(find(catidx==3 & bothsignif)),4);
   n3a=hist(celltype(find(catidx==3 & onesignif)),4);
   
   subplot(2,2,1);
   bb=bar([n1+n1a;n2+n2a;n3+n3a]);
   set(bb,'facecolor',[1 1 1])
   hold on
   bb=bar([n1;n2;n3]);
   hold off
   
   subplot(2,2,2);
   ds=[n1+n1a;n2+n2a;n3+n3a;...
       n1+n2+n3;n1+n1a+n1a+n2+n2a+n3+n3a]';
   ds=ds./repmat(sum(ds,1),[4 1]);
   bar(ds');
   title('shift set per att effect');

   if 0,
      subplot(2,2,3);
      ds=[n1+n1a;n2+n2a;n3+n3a]';
      ds=ds./repmat(sum(ds,2),[1 size(ds,2)]);
      bar(ds);
      title('att effect per shift set');
   end
end

colormap(gray);






vsigidx=(squeeze(predxc(1,1,:)>cat(3,res.randxc).*2));
extrasig=bothsignif+onesignif;
%extrasig=bothsignif;
%extrasig=vsigidx & (bothsignif+onesignif);
extrasig=ones(size(bothsignif));

t1=strfattrankchange(find(bothsignif),:);
t1=[t1(:);strfattrankchange(find(onesignif),1)];
%t1=[t1(:);strfattrankchange(find(twosignif),2)];
t2=obsattrankchange(find(bothsignif),:);
t2=[t2(:);obsattrankchange(find(onesignif),1)];
%t2=[t2(:);obsattrankchange(find(twosignif),2)];
%t1=strfattrankchange(find(extrasig),:);
%t2=obsattrankchange(find(extrasig),:);
[cxy,exy,tt,p]=randxcov(t1(:),t2(:),0,500);

sc=zeros(3,3);
sce=zeros(3,3);
oc=zeros(3,3);
oce=zeros(3,3);
jcount=100;
oset={};
for jj=1:3,
   sc(jj,1:2)=mean(strfattrankchange(catidx==jj & extrasig,:));
   sce(jj,1:2)=std(strfattrankchange(catidx==jj & extrasig,:))./ ...
       sqrt(sum(catidx==jj & extrasig));
   
   tt=strfattrankchange(catidx==jj & bothsignif,:);
   t2=strfattrankchange(catidx==jj & onesignif,:);
   t3=strfattrankchange(catidx==jj & twosignif,:);
   tt=([tt;t2]);
   %tt=((strfattrankchange(catidx==jj,:)));
   %[sc(jj,3),sce(jj,3)]=jackmeanerr([tt(:)],jcount)
   sc(jj,3)=mean(tt(:));
   sce(jj,3)=std(tt(:))./sqrt(length(tt(:)));
   
   oc(jj,1:2)=mean(obsattrankchange(catidx==jj & extrasig,:));
   oce(jj,1:2)=std(obsattrankchange(catidx==jj & extrasig,:))./sqrt(sum(catidx==jj & extrasig));
   
   tt=obsattrankchange(catidx==jj & bothsignif,:);
   t2=obsattrankchange(catidx==jj & onesignif,:);
   t3=obsattrankchange(catidx==jj & twosignif,:);
   tt=([tt;t2]);
   %tt=((obsattrankchange(catidx==jj,:)));
   %[oc(jj,3),oce(jj,3)]=jackmeanerr([tt(:)],jcount)
   oc(jj,3)=mean(tt(:));
   oce(jj,3)=std(tt(:))./sqrt(length(tt(:)));
   oset{jj}=tt(:);
end

% 2.5 factor "unnormalizes" by max response
%scaleby=mean(mresp(:,1,find(extrasig))).*2.5.*60;
scaleby=100;

figure(3);
subplot(2,2,3);
errorbar(oc(:,3).*scaleby,oce(:,3).*scaleby,'k+');
hold on
hb=bar([oc(:,3)].*scaleby,'stacked');
hold off
title('pct change targresp FT, obs, per class');

subplot(2,2,4);
errorbar(sc(:,3).*scaleby,sce(:,3).*scaleby,'k+');
hold on
hb=bar([sc(:,3)].*scaleby,'stacked');
hold off
title('pct change targresp FT, pred, per class');

p2=randttest(oset{1},oset{3},10000,-1);
fprintf('shift(mod) > shift(no att), p<%.5f\n',p2);



[find(catidx==1) ftsig(catidx==1,2:3) celltype(find(catidx==1)) ...
 pcelltype(find(catidx==1))]

fprintf('corr pred shift and obs shift: %.3f (p<%.3f)\n',cxy,p);


indepfeatsig=[ftsig(:,1)|ftsig(:,2) ftsigin(:,1)|ftsigin(:,2) ...
              ftsigout(:,1)|ftsigout(:,2)];

localfeatsig=[ftsig(:,3) ftsigin(:,3) ftsigout(:,3)];
sall=sum(sum(localfeatsig,2)==3)
sinnotout=sum(localfeatsig(:,1)==1 & localfeatsig(:,2)==1 &...
              localfeatsig(:,3)==0)
soutnotin=sum(localfeatsig(:,1)==1 & localfeatsig(:,2)==0 &...
              localfeatsig(:,3)==1)
sbothonly=sum(localfeatsig(:,1)==1 & localfeatsig(:,2)==0 &...
              localfeatsig(:,3)==0)

allfracs=permute(tfullxc(:,:,:),[3 1 2]).^2;
for ii=1:size(allfracs,3),
   allfracs(~allfracs(:,4,ii),4,ii)=1;
end

allfracs=allfracs./repmat(allfracs(:,end,:),[1 size(allfracs,2) 1]);
allfracs(allfracs>1)=1;

alltd=diff(allfracs(:,[1 3 4],:),[],2);
alltd(alltd<0)=0;

mmallfracs=zeros(3,2);
eeallfracs=zeros(3,2);

for ii=1:2,
   [mmallfracs(1,ii),eeallfracs(1,ii)]=jackmeanerr(alltd(anymodidx,ii,2),1000);
   [mmallfracs(2,ii),eeallfracs(2,ii)]=jackmeanerr(alltd(anymodidx,ii,4),1000);
   [mmallfracs(3,ii),eeallfracs(3,ii)]=jackmeanerr(alltd(anymodidx,ii,5),1000);
end


figure(4);
colormap(gray)

subplot(2,2,1);
bar([sall sinnotout soutnotin sbothonly]);

title('n local mod (all,innotout,outnotin,bothonly)');

subplot(2,2,2);
if 0,
   pie([sall sinnotout soutnotin sbothonly],{'in or out','in not out',...
                    'out not in','both only'});
else
   cla
   d=zeros(2,2,2);
   dm=zeros(2,2,2);
   for ii=1:2,
      for jj=1:2,
         for kk=1:2,% | spsig(:,3)
            d(ii,jj,kk)=sum((spsig(:,1) | spsig(:,2) | spsig(:,3))==(ii-1) &...
                            (ftsig(:,1) | ftsig(:,2))==(jj-1) & ...
                            ftsig(:,3)==(kk-1));
            dm(ii,jj,kk)=sum(spsig(:,3) & ...
                             (spsig(:,1) | spsig(:,2))==(ii-1) & ...
                             (ftsig(:,1) | ftsig(:,2))==(jj-1) & ...
                             ftsig(:,3)==(kk-1));
         end
      end
   end
   venn(d,1);
   legend('sp-any','ft-sep','ft-tun');
   
   % randomization test for significant interaction
   spany=(spsig(:,1) | spsig(:,2) | spsig(:,3));
   ftdcg=(ftsig(:,1) | ftsig(:,2));
   fttun=ftsig(:,3);
   ftany=(ftdcg | fttun);
   
   N=4000;
   spftolapfrac=sum(spany & ftany)./sum(ftany);
   dcgtunolapfrac=sum(ftdcg & fttun)./sum(fttun);
   randfracs=zeros(N,2);
   for nn=1:N,
      tspany=shuffle(spany);
      randfracs(nn,1)=sum(tspany & ftany)./sum(ftany);
      tftdcg=shuffle(ftdcg);
      randfracs(nn,2)=sum(tftdcg & fttun)./sum(fttun);
   end
   mlist=sort([randfracs; spftolapfrac dcgtunolapfrac]);
   bmin1=max(find(mlist(:,1)<spftolapfrac));
   bmin2=max(find(mlist(:,2)<dcgtunolapfrac));
   p1=1-bmin1./length(mlist)
   p2=1-bmin2./length(mlist)
   
   
end

subplot(2,2,3);
errorbar(mmallfracs(:),eeallfracs(:),'k+');
hold on
bar(mmallfracs(:));
hold off

title('fraction variance (ft-ftin-ftout,dcg-tun)');

subplot(2,2,4);
bar([sum(indepfeatsig);sum(localfeatsig)]./length(indepfeatsig));

title('cells modulated (ft-ftin-ftout,dcg-tun)');

fullpage landscape



keyboard


useidx=find(ftsig(:,3)|ftsig(:,2));
useidx0=find(1-(ftsig(:,3)|ftsig(:,2)));
useidx=find(ftsig(:,3));
useidx0=find(1-(ftsig(:,3)));

if 1,
   aa=log2(squeeze(psfpeak(1,2:3,:))');
   bb=log2(squeeze(targsfpeak(:,:))');
   da=aa(:,1)-aa(:,2);
   db=bb(:,1)-bb(:,2);
   keepidx=find(isnan(da) | isnan(db) | isinf(da));
   db(keepidx)=0;
   da(keepidx)=0;
   
else
   aa=squeeze(porpeak(1,2:3,:))';
   bb=squeeze(targorpeak(:,:))';
   da=aa(:,1)-aa(:,2);
   db=bb(:,1)-bb(:,2);
   aa(aa(:,1)-bb(:,1)>90,1)=aa(aa(:,1)-bb(:,1)>90,1)-180;
   aa(aa(:,2)-bb(:,2)>90,2)=aa(aa(:,2)-bb(:,2)>90,2)-180;
   aa(aa(:,1)-bb(:,1)<-90,1)=aa(aa(:,1)-bb(:,1)<-90,1)+180;
   aa(aa(:,2)-bb(:,2)<-90,2)=aa(aa(:,2)-bb(:,2)<-90,2)+180;
   
   da(da>90)=da(da>90)-180;
   da(da<-90)=da(da<-90)+180;
   db(db>90)=db(db>90)-180;
   db(db<-90)=db(db<-90)+180;
end

figure(5);
clf
for featureidx=1:2,
   if featureidx==1,
      aa=log2(squeeze(sfpeak(1,2:3,:))');
      bb=log2(squeeze(targsfpeak(:,:))');
      da=aa(:,1)-aa(:,2);
      db=bb(:,1)-bb(:,2);
      keepidx=find(isnan(da) | isnan(db) | isinf(da));
      db(keepidx)=0;
      da(keepidx)=0;
      ss=[linspace(0,max(abs(db(:))).*0.6,8) ];
   else
      aa=squeeze(orpeak(1,2:3,:))';
      bb=squeeze(targorpeak(:,:))';
      da=aa(:,1)-aa(:,2);
      db=bb(:,1)-bb(:,2);
      aa(aa(:,1)-bb(:,1)>90,1)=aa(aa(:,1)-bb(:,1)>90,1)-180;
      aa(aa(:,2)-bb(:,2)>90,2)=aa(aa(:,2)-bb(:,2)>90,2)-180;
      aa(aa(:,1)-bb(:,1)<-90,1)=aa(aa(:,1)-bb(:,1)<-90,1)+180;
      aa(aa(:,2)-bb(:,2)<-90,2)=aa(aa(:,2)-bb(:,2)<-90,2)+180;
      
      da(da>90)=da(da>90)-180;
      da(da<-90)=da(da<-90)+180;
      db(db>90)=db(db>90)-180;
      db(db<-90)=db(db<-90)+180;
      ss=[linspace(0,max(abs(db(:))).*0.98,8) ];
   end
   
   
   subplot(2,2,1+featureidx*2-2);
   plot(da(useidx),db(useidx),'k.')
   
   n1=hist(abs(db(useidx)),ss);
   n2=hist(abs(db(useidx0)),ss);
   n1=n1./sum(n1);
   n2=n2./sum(n2);
   
   subplot(2,2,2+featureidx*2-2);
   bar(ss,[n1;n2]');
   axis tight

   [xcov(da(useidx),db(useidx),0,'coeff') ...
    mean(abs(db(useidx))) mean(abs(db(useidx0)))]
end

subplot(2,2,2);
aad=[aa(useidx,1)-bb(useidx,1);aa(useidx,2)-bb(useidx,2)];
aad(aad>90)=aad(aad>90)-180;
aad(aad<-90)=aad(aad<-90)+180;
aad0=[aa(useidx,1)-bb(useidx,2);aa(useidx,2)-bb(useidx,1)];
aad0(aad0>90)=aad0(aad0>90)-180;
aad0(aad0<-90)=aad0(aad0<-90)+180;

aad(isinf(aad))=0;
aad0(isinf(aad0))=0;
ss=linspace(min([aad;aad0]),max([aad;aad0]),10);

n1=hist(aad,ss);
n2=hist(aad0,ss);
bar([n1; n2]);
[median(abs(aad)) median(abs(aad0))]


%xcov(aa(useidx0,1)-aa(useidx0,2),bb(useidx0,1)-bb(useidx0,2),0,'coeff')

%hist(aa(useidx,1)-aa(useidx,2));
%hist(aa(useidx0,1)-aa(useidx0,2));









hingeparms=cat(3,res.hingeparms);

rset=cat(3,res.rset);
rset=rset(:,[1 4 3],:).*60;
%rset=rset(:,:,find(sum(origlocalsig,2)));
%rset=rset(:,:,find(ftsig(:,2) | spsig(:,2)));

%ftidx=find((ftsig(:,2)|spsig(:,2)));
%spidx=find((ftsig(:,2)|spsig(:,2)));
%ftidx=find((ftsig(:,2)|spsig(:,2)) & ~sum(origlocalsig,2));
%spidx=find((ftsig(:,2)|spsig(:,2)) & ~sum(origlocalsig,2));
ftidx=find(sum(origlocalsig,2));
spidx=find(sum(origlocalsig,2));
%ftidx=find(origlocalsig(:,1));
%spidx=find(origlocalsig(:,1));
%spidx=find(origlocalsig(:,2));
%ftidx=1:size(rset,3);
%spidx=1:size(rset,3);

for ii=1:size(rset,3),
   for jj=2:3,
      if mean(rset(round(size(rset,1).*(2/3)):end,jj,ii))<0,
         rset(:,jj,ii)=-rset(:,jj,ii);
      end
   end
end

rr=rset(:,2:3,:);
rr(:,:)=gsmooth(rr(:,:),2);

rm=max(rr,[],1);
%rm=mean(abs(rr));
%rm=std(rr);
rr=rr./repmat(rm,[size(rr,1) 1]);

figure(2);
clf

errorbar(mean(rset(:,1,ftidx),3),mean(rr(:,1,ftidx),3),...
         std(rr(:,1,ftidx),0,3)./sqrt(length(ftidx)),'r');
hold on
errorbar(mean(rset(:,1,spidx),3),mean(rr(:,2,spidx),3),...
         std(rr(:,2,spidx),0,3)./sqrt(length(spidx)));
%plot(mean(rset(:,1,:),3),mean(rr,3)+std(rr,0,3)./sqrt(size(rr,3)),'--');
%plot(mean(rset(:,1,:),3),mean(rr,3)-std(rr,0,3)./sqrt(size(rr,3)),'--');
hold off
ylabel('(rhi-rlow)/2');
xlabel('(rhi+rlow)/2');



%
% looks for trends in tuning
% 


% peak spatial frequency difference in feature attention
aidx=1;
shidx=find(origlocalsig(:,aidx))';
shidx0=find(~origlocalsig(:,aidx))';
shnorm=sqrt(length(shidx));
sh0norm=sqrt(length(shidx0));

DISPLAYON=1;
starstr={'','*'};
disp('  CELL    PRED XC     PEAK SF     PEAK PSF     PEAK NSF');
for ii=shidx,
   fprintf('%3d. %-7s %5.2f%5.2f  %4.2f %4.2f  %4.2f %4.2f  %4.2f %4.2f\n',...
           ii,res(ii).cellid,predxc(1,[1 aidx+1],ii),...
           sfpeak(aidx,2:3,ii),psfpeak(aidx,2:3,ii),nsfpeak(aidx,2:3,ii));
   if DISPLAYON,
      
      figure(3);
      clf
      
      ormin=min(min(min(nortuning(:,:,:,ii))))*1.1;
      ormax=max(max(max(portuning(:,:,:,ii))))*1.1;
      sfmin=min(min(min(nsftuning(:,:,:,ii))))*1.1;
      sfmax=max(max(max(psftuning(:,:,:,ii))))*1.1;
      
      tk=permute(cat(3,res(ii).Hset,res(ii).Hset(:,:,2)-res(ii).Hset(:,:,3),...
                     res(ii).Hset(:,:,1:2)),[1 3 2]);
      
      showkern(tk,'pfftgr',[],{},1);
      
      subplot(2,6,1);
      title(sprintf('%s baseline',res(ii).cellid));
      
      subplot(2,6,7);
      cla; axis off
      kcount=size(res(ii).globaldc,1);
      bootcount=size(res(ii).globaldc,2);
      mdc=mean(res(ii).globaldc(2:end,:),2);
      edc=std(res(ii).globaldc(2:end,:),1,2) .* sqrt(bootcount);
      plot(linspace(0,kcount+1,bootcount)',res(ii).globaldc(2:end,:)','--');
      hold on
      errorbar(mdc,edc.*2,'ko');
      hold off
      title('global dc');
      axis square
      
      subplot(2,6,2);
      title(sprintf('Aa: %5.2f/%5.2f %s',...
                    res(ii).predxc(1:2,2),starstr{(res(ii).pxc(2)<PTHRESH)+1}));
      subplot(2,6,3);
      title(sprintf('Bb'));
      subplot(2,6,4);
      title(sprintf('Aa-Bb'));

      subplot(2,6,8);
      title(sprintf('AB: %5.2f/%5.2f %s',...
                    res(ii).predxc(1:2,3),starstr{(res(ii).pxc(3)<PTHRESH)+1}));
      subplot(2,6,9);
      title(sprintf('ab'));
      subplot(2,6,10);
      title(sprintf('AB-ab'));
      
      subplot(2,6,5);
      plot(obins,squeeze(portuning(:,1,2:3,ii)),'LineWidth',2);
      hold on
      plot(obins,squeeze(nortuning(:,1,2:3,ii)),'--','LineWidth',2);
      hold off
      axis([min(obins) max(obins) ormin ormax]);
      title(sprintf('Aa/Bb p0: %.1f/%.1f\nn0: %.1f/%.1f\norbw: %.1f/%.1f',...
                    porpeak(1,2:end,ii),norpeak(1,2:end,ii),orbw(1,2:end,ii)));
      axis square
      
      subplot(2,6,6);
      plot(sfbins,squeeze(psftuning(:,1,2:3,ii)),'LineWidth',2);
      hold on
      plot(sfbins,squeeze(nsftuning(:,1,2:3,ii)),'--','LineWidth',2);
      hold off
      axis([min(sfbins) max(sfbins) sfmin sfmax]);
      title(sprintf('Aa/Bb psf: %.1f/%.1f\nnsf: %.1f/%.1f\nsfbw: %.1f/%.1f',...
                    psfpeak(1,2:end,ii),nsfpeak(1,2:end,ii),sfbw(1,2:end,ii)));
      xlabel('spatial freq');
      axis square
      legend('Aa','Bb');
      
      subplot(2,6,11);
      plot(obins,squeeze(portuning(:,2,2:3,ii)),'LineWidth',2);
      hold on
      plot(obins,squeeze(nortuning(:,2,2:3,ii)),'--','LineWidth',2);
      hold off
      axis([min(res(ii).obins) max(res(ii).obins) ormin ormax]);
      title(sprintf('AB/ab p0: %.1f/%.1f\nn0: %.1f/%.1f\norbw: %.1f/%.1f',...
                    porpeak(2,2:end,ii),norpeak(2,2:end,ii),orbw(2,2:end,ii)));
      axis square
      
      subplot(2,6,12);
      plot(sfbins,squeeze(psftuning(:,2,2:3,ii)),'LineWidth',2);
      hold on
      plot(sfbins,squeeze(nsftuning(:,2,2:3,ii)),'--','LineWidth',2);
      hold off
      axis([min(res(ii).sfbins) max(res(ii).sfbins) sfmin sfmax]);
      title(sprintf('AB/ab psf: %.1f/%.1f\nnsf: %.1f/%.1f\nsfbw: %.1f/%.1f',...
                    psfpeak(2,2:end,ii),nsfpeak(2,2:end,ii),sfbw(2,2:end,ii)));
      xlabel('spatial freq');
      legend('AB','ab');
      axis square
      
      fullpage landscape
      pause
   end
end
fprintf('---. %-7s %5.2f%5.2f  %4.2f+%4.2f  %4.2f+%4.2f  %4.2f+%4.2f\n',...
        'AVG',mean(predxc(1,[1 aidx+1],shidx),3),...
        median(abs(diff(log2(sfpeak(aidx,2:3,shidx)),[],2)),3),...
        std(abs(diff(log2(sfpeak(aidx,2:3,shidx)),[],2)),3)./shnorm,...
        median(abs(diff(log2(psfpeak(aidx,2:3,shidx)),[],2)),3),...
        std(abs(diff(log2(psfpeak(aidx,2:3,shidx)),[],2)),3)./shnorm,...
        median(abs(diff(log2(nsfpeak(aidx,2:3,shidx)),[],2)),3),...
        std(abs(diff(log2(nsfpeak(aidx,2:3,shidx)),[],2)),3)./shnorm)
fprintf('---. %-7s %5.2f%5.2f  %4.2f+%4.2f  %4.2f+%4.2f  %4.2f+%4.2f\n',...
        'NAVG',mean(predxc(1,[1 aidx+1],shidx0),3),...
        median(abs(diff(log2(sfpeak(aidx,2:3,shidx0)),[],2)),3),...
        std(abs(diff(log2(sfpeak(aidx,2:3,shidx0)),[],2)),3)./sh0norm,...
        median(abs(diff(log2(psfpeak(aidx,2:3,shidx0)),[],2)),3),...
        std(abs(diff(log2(psfpeak(aidx,2:3,shidx0)),[],2)),3)./sh0norm,...
        median(abs(diff(log2(nsfpeak(aidx,2:3,shidx0)),[],2)),3),...
        std(abs(diff(log2(nsfpeak(aidx,2:3,shidx0)),[],2)),3)./sh0norm)

disp('need to look at trends across a bunch of tuning properties here!');
keyboard


aidx=1;

aa=squeeze(pamp(aidx,2,:));
bb=squeeze(pamp(aidx,3,:));

aa=squeeze(namp(aidx,2,:));
bb=squeeze(namp(aidx,3,:));

aa=squeeze(porpeak(aidx,2,:));
bb=squeeze(porpeak(aidx,3,:));
bb(find(bb-aa>90))=bb(find(bb-aa>90))-180;
bb(find(aa-bb>90))=bb(find(aa-bb>90))+180;

aa=squeeze(porbw(aidx,2,:));
bb=squeeze(porbw(aidx,3,:));
aa=squeeze(norbw(aidx,2,:));
bb=squeeze(norbw(aidx,3,:));
aa=log2(squeeze(sfpeak(aidx,2,:)));
bb=log2(squeeze(sfpeak(aidx,3,:)));
aa=log2(squeeze(psfpeak(aidx,2,:)));
bb=log2(squeeze(psfpeak(aidx,3,:)));
aa=log2(squeeze(nsfpeak(aidx,2,:)));
bb=log2(squeeze(nsfpeak(aidx,3,:)));
aa=(squeeze(sfbw(aidx,2,:)));
bb=(squeeze(sfbw(aidx,3,:)));
aa=(squeeze(psfbw(aidx,2,:)));
bb=(squeeze(psfbw(aidx,3,:)));
aa=(squeeze(nsfbw(aidx,2,:)));
bb=(squeeze(nsfbw(aidx,3,:)));

figure(3);
clf
plot(aa,bb,'.');
hold on
plot(aa(find(origlocalsig(:,aidx))),bb(find(origlocalsig(:,aidx))),'r.');
%plot([0 180],[0 180],'k--');
plot([0 4],[0 4],'k--');
hold off
axis equal
axis square
[nanmedian([abs(aa(find(origlocalsig(:,aidx)))-bb(find(origlocalsig(:,aidx))))])
 nanmedian([abs(aa(find(~origlocalsig(:,aidx)))-bb(find(~origlocalsig(:,aidx))))])
 nanstd(abs(aa(find(origlocalsig(:,aidx)))-...
            bb(find(origlocalsig(:,aidx)))))./...
 sqrt(sum(origlocalsig(:,aidx)))
 nanstd([abs(aa(find(~origlocalsig(:,aidx)))-...
             bb(find(~origlocalsig(:,aidx))))])./...
 sqrt(sum(~origlocalsig(:,aidx)))
]




ftall=[];
spall=[];
%for ii=find(ftsig(:,2) + spsig(:,2))',
for ii=1:length(res),
      
   if 0,
      sigparms=res(ii).sigparms;
      p0=linspace(res(ii).sigrange(1,1,1),res(ii).sigrange(2,1,1))';
      rft=[sigmoid(sigparms(:,1,1),p0) sigmoid(sigparms(:,2,1),p0)];
      rsp=[sigmoid(sigparms(:,1,2),p0) sigmoid(sigparms(:,2,2),p0)];
   elseif 1,
      p0=res(ii).rset(:,1);
      rft=[p0 hinge(hingeparms(:,1,ii),p0)];
      rsp=[p0 hinge(hingeparms(:,2,ii),p0)];
      
   elseif 1,
      
      p0=res(ii).rset(:,1);
      rft=[p0 p0+res(ii).rset(:,2) p0-res(ii).rset(:,2)];
      rsp=[p0 p0+res(ii).rset(:,3) p0-res(ii).rset(:,3)];
      
   else
      p0=linspace(res(ii).baserange(1),res(ii).baserange(2),100)';
      
      ftgg=mean(res(ii).globalgain(2,:));
      ftdc=mean(res(ii).globaldc(2,:))./60;
      rft=[p0 p0 + p0*ftgg + ftdc  p0 - p0*ftgg - ftdc];
      
      spgg=mean(res(ii).globalgain(3,:));
      spdc=mean(res(ii).globaldc(3,:))./60;
      rsp=[p0 p0 + p0*spgg + spdc  p0 - p0*spgg - spdc];
   end
   
   if 1,
      ftall=cat(3,ftall,rft);
      spall=cat(3,spall,rsp);
      
      
   else
      [ftdc.*60 ftgg spdc.*60 spgg]
      
      figure(1);
      clf
      
      subplot(1,2,1);
      plot(p0,rft);
      title(sprintf('%s ft Aa vs Bb %.2f-%.2f p<%.2f',res(ii).cellid,...
                    res(ii).fullxc([1 3],2),res(ii).fullp(3,2)));
      
      subplot(1,2,2);
      plot(p0,rsp);
      title(sprintf('%s sp AB vs ab %.2f-%.2f p<%.2f',res(ii).cellid,...
                    res(ii).fullxc([1 3],3),res(ii).fullp(3,3)));
      
      pause
   end
end
plot([mean(abs(ftall(:,2,:)),3) mean(abs(spall(:,2,:)),3)])



