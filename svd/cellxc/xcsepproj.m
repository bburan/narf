% function [resp,stimtime,stimspace,strf]=xcsepproj(cellid,batch)
%
% load results generated by xcsepfull and project stimulus onto
% spatial and temporal response functions
%
% cellid - name of cell.
% batch - which data set to use. recommended batch=76 for natrev
%
% created SVD 2/26/04
%
function [resp,stimtime,stimspace,strf]=xcsepproj(cellid,batch)

if ~exist('batch','var'),
   batch=76;
end

dbopen;
goodbatch=zeros(1,length(batch));
sql=['SELECT * from sRunData WHERE cellid="',cellid,'"',...
     ' AND batch=',num2str(batch)];
rundata=mysql(sql);

if length(rundata)==0,
   disp('no entry found in db!');
   if nargout>0,
      r=0;
   end
   return
end

resfile=[rundata.respath,rundata.resfile,'.gz'];
fprintf('loading: %s\n',resfile);
zload(resfile);

global BATQUEUEID
BATQUEUEID=[];

batchcount=size(strf,1);

kernidx=3;
hspace=strf(kernidx).hspace;
htime=strf(kernidx).tempresp;


figure(1);
clf
showkern([hspace hspace],strf(1).parms.kernfmt);
subplot(1,2,1);
title(sprintf('%s bat %d: spatial response function',cellid,batch));

subplot(1,2,2);
tbins=(1:length(strf(1).tempresp))*14-7;
plot(tbins,htime,'k-');
axis square
title(sprintf('%s bat %d: temporal response function',cellid,batch));
xlabel('time lag (ms)');

drawnow


attidx=1;

xcloadfiles;

mstim=zeros(size(stim,2),1);
if params.meansub,
   mstim=strf(3).mS;
end

stimtime=(stim-repmat(mstim',size(stim,1),1))*hspace;

spacecount=size(stim,2);
th=ones(spacecount,1)*htime;

stimspace=kernpredict(th,stim',spacecount,0,1);

clear strf
strf.htime=htime;
strf.hspace=hspace;

