function ret = mean_downsample(args)
% Default Parameters
params = [];
params.orig_freq = 100000;
params.ds_freq = 200;
params.ds_dim_num = 2;  % The dimension on which to downsample
params.pretty_name = 'Mean of Points';
params.editable_fields = {'ds_freq'};

% Overwrite the defaults with the arguments iff they are in editable_fields
if nargin == 1
    fns = fieldnames(args);
    for idx = 1:length(fns);
        if any(ismember(params.editable_fields, fns{idx}))
            params.(fns{idx}) = args.(fns{idx});
        end
    end
end

% ------------------------------------------------------------------------
% INSTANCE METHODS
function downsamp_x = do_mean_downsample(parm, x)
    downsamp_x=conv_fn(x, parm.ds_dim_num, @mean, ceil(parm.orig_freq / parm.ds_freq), 0);
end

function downsamp_x = do_mean_downsample(parm, x)
    downsamp_x=conv_fn(x, parm.ds_dim_num, @mean, ceil(parm.orig_freq / parm.ds_freq), 0);
end

DS_RESPAVG = conv_fn(RESPAVG, 2, @sum, SAMPFREQ/DS_FREQ, 0);
[d,l] = size(DS_RESPAVG);
DS_TIME = [0:1/DS_FREQ:l/DS_FREQ-1/DS_FREQ];
DS_STIM = conv_fn(PF_STIM, 2, @mean, SAMPFREQ/DS_FREQ, 0);

% ------------------------------------------------------------------------
% Put the instance methods in params struct
params.downsamp_fn = @do_mean_downsample;
ret = params;
end
