function gam4th()
% A single gammatone that is 4th order.

global MODULES STACK;

load_fs = 50000;
samp_fs = 200;

append_module(MODULES.load_stim_resps_from_baphy.mdl(...
                           struct('raw_resp_fs', samp_fs, ...
                                  'raw_stim_fs', load_fs,...
                                  'include_prestim', true, ...
                                  'stimulus_format', 'wav'))); 
                              
append_module(MODULES.gammatone_filter.mdl(...
                           struct('center_freq_khz', [2], ...
                                  'bandwidth',   [0.1], ...
                                  'raw_stim_fs', load_fs,...
                                  'use_env', true, ...
                                  'align', false, ...
                                  'fit_fields', {{'center_freq_khz', 'bandwidth'}})));

append_module(MODULES.downsample_signal.mdl(...
        struct('input', 'stim', ...
               'input_freq', load_fs, ...
               'input_time', 'stim_time', ...
               'output', 'stim', ...
               'output_freq', samp_fs, ...
               'output_time', 'stim_time', ...
               'downsampler', @decimate))); % Try @decimate, or @conv_fn, or @resample

append_module(MODULES.normalize_channels.mdl(struct('force_positive', true)));

append_module(MODULES.weight_channels.mdl(struct('weights', [1], ...
                                                 'y_offset', 0, ...
                                                 'fit_fields', {{'y_offset', 'weights'}})));

nmse();
fitell();
