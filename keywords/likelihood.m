function likelihood()

global MODULES META STACK;

mods = find_modules(STACK, 'bayesian_likelihood', true);
if isempty(mods)
    % Compute inter-spike intervals by loading a higher resolution resp
    
    [lsfb, lsfb_idx] = find_modules(STACK, 'load_stim_resps_from_baphy', true);
    
    % Insert into the stack
    % STACK(lsfb_idx+1:end+1) = STACK(lsfb_idx:end);
    %
    append_module(lsfb{1}.mdl(...
        struct('raw_resp_fs', 10000, ...
        'raw_stim_fs', lsfb{1}.raw_stim_fs, ...
        'include_prestim', lsfb{1}.include_prestim, ...
        'stimulus_format', lsfb{1}.stimulus_format, ...
        'output_stim', 'stimbogus', ...
        'output_stim_time', 'stimbogustime', ...
        'output_resp', 'resp10000', ...
        'output_resp_time', 'resp10000time', ...
        'output_respavg', 'respavg10000')));
    append_module(MODULES.inter_spike_intervals.mdl(...
        struct('input', 'resp10000', ...
        'time', 'resp10000time', ...
        'output', 'resp_ISIs')));
    
    append_module(MODULES.bayesian_likelihood); % Default: Exponential    
    
end

META.perf_metric = @pm_nlogl;
