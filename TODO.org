* THE TODO LIST
  1. [ ] Add a lsqcurve fitting button to the narf_modelpane?
  2. [ ] Consolidate the fitting code to avoid problems with FIR filter 
  3. [ ] Add legend info to all plots
  4. [ ] Make gammatone filter bank work like elliptic bandpass filter 
  5. [ ] Provide functions to cover the input space logarithmically with filters
  6. [ ] Get linear_fit_with_preprocessing working again
  7. [ ] Find a way to save predictions (for easy comparison across multiple models)
  8. [ ] Suggest an improvement: Use BAPHY to cache intermediate values
  9. [ ] Make Concat Second Order Terms work for any higher order nchoosek type stuff
  10. [ ] Add a module which can pick out a particular dimension from a vector and give it a name as a signal
  11. [ ] Add a module which thresholds FIR output
  12. [ ] Add a module which does hard thresholding of output to prevent it from going negative
  13. [ ] Add a function to compute 'var' for each input channel, across every stimulus. then SCALE FIR coefficients in that row by 1/var right before the filtering. Then FIR coefficients will be relative?
  14. [ ] Write a crash course guide on using NARF
  15. [ ] Remember to invalidate data BELOW the present point on a table-edit callback... and to update the gui to reflect this!
  16. [ ] Make logging work for the GUI by including the log space in narf_modelpane? 
  17. [ ] Delete the GUI objects whenever you 'apply' since they may need to be recreated?
  18. [ ] Write a 'scaled boosting' algorithm, which takes a step in the direction inversely proportional to power of that channel (reweighting the channels by their power, essentially)
  19. [ ] Write a 'conjugate boosting' algorithm, which is normal boosting but takes steps in a single direction until the objective function stops improving.
  20. [ ] Write several different performance metric functions: MSE and a point-process fit
  21. [ ] Write a jack-knifing function which can work with any of the optimization modules
  22. [ ] Single channel gammatone filter (for speed, once sensitivity has been identified)
  23. [ ] SMOOTHING of the RESPAVG signal with gaussian convolution
  24. [ ] An option for taking correlation in a different method than sheer concatenation could be interesting
  25. [ ] Add a method to "save analysis", connecting the stimfile train/test sets, model structure and params, optimization method, and GIT code hash number all together in a single, savable structure.
  26. [ ] Add error handling (catch/throw) around EVERY CALL to a user defined function
  27. [ ] Handle NaN's better...right now they can cause problems! (Use nanmean())
  28. [ ] Add a GUI button to load_stim_from_baphy to play the stimulus as a sound?
  29. [ ] Put a Button on the performance metric that launches an external figure if more plot space is needed.
  30. [ ] Make it so baphy can be run _twice_, so that raw_stim_fs can be two different values (load envelope and wav data simultaneously)
	 
* CLEANING/REFACTORING TODOS:
  - Scoping in matlab appears broken. You can modify a global value accidentally because function returns are not protected!
  - Use this idiom more often to search through struct or cell arrays:
    hits = arrayfun(@(x)strcmp(x.stimfile, sf), XXX{2}.cfd);   % Use cellfun instead of arrayfun if needed.
  - Look for obvious repetition and make some more functions in util/
  - Remove/rename useless functions in util that have accumulated.
  - Rename things to be more clear. Any sort of input dimension is a 'channel', to abstract the notion of stimulus dimension?
  - In retrospect, 'plot_gui' stuff probably shouldn't be stored in the XXX or STACK structures...should it?
  - It's not quite right to have the 'replot' command be part of the the 'plot_popup fn callback'. Needs to be re-thought.
  - Right now, you can only instantiate a single GUI at a time. Could this be avoided and the design made more general?
  - Provide a more concise way of finding user-space guis in the call tree above (Right now there's too much copy & paste in user-side plot functions!)
  - Go through the TODO's in existing files
  - Ensure that no closures of data are being done by methods. Methods should accept the module object as their first argument, not close over anything.
  - make anything named 'update_' into a function used purely for its side effects
  - make anything named 'do_' into a method for use with modules?

* LUXURY, UNESSENTIAL TODO ITEMS 
  - [ ] Make raw/stimulus response have two dropdowns to pick out colorbar thresholds for easier visualization
  - [ ] Add a filter that processess phase information from a stimulus, not just the magnitude
  - [ ] Write a function which swaps out the STACK into the BACKGROUND so you can 'hold' a model as a reference and play around with other settings, and see the results graphically by switching back and forth.
  - [ ] Write dbchoosecellfiles()
  - [ ] Use inter_curve_v3 to interactively make FIR things
  - [ ] Try adding color to histograms and scatter plots
  - [ ] Try improving contrast of various intensity plots
  - [ ] Add BIC or AIC to model comparison data
  - [ ] Optimization report card and status information logged
  - [ ] Rank model fits and plot correlations
