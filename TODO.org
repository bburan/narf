* NEXT STEPS:
  5. [ ] Break out second part of performance plotting into a second function
	 We need to be able to display test/train performance curves on the same plot?
  6. [ ] Jacknifing fitting routine
  7. [ ] A plot function to display test/train info for various models, using only saved anaalysis file for speed
  8. [ ] Refactor a function which extracts info from all saved files in a directory (stack or XXX?)
  9. [ ] Extract the 'generate models' part of test_likely_candidates and make it usable by multiple scripts
  10. [ ] Make find_module return ALL modules found, in case there are multiple FIR or multiple nonlinearities
  11. [ ] Add a 'set_module_field' function (finds index, sets field, so you can mess with things later in scirpts)
  12. [ ] Check STRFlab for how they are doing their fitting, underneath the hood. Can I call their stuff?
  13. [ ] Try nlinfit() as an alternative to lsqcurvefit()
  14. [ ] IRRITATION: Why doesn't 'nonlinearity' module default to a sigmoid with reasonable parameters?
  15. [ ] IRRITATION: Why doesn't it show the model save filename so I can see which file I just loaded if I forgot?
  16. [ ] IRRITATION: Why doesn't a plotted signal have a legend?
  17. [ ] IRRITATION: Why don't the X (or at least the Y) axes have scales?
  18. [ ] IRRITATION: Why isn't there an 'undo' function?
  19. [ ] IRRITATION: Why can't I resize windows?
  20. [ ] IRRITATION: Why isn't there progress in the GUI when fitting?
  21. [ ] IRRITATION: Why are the editable text boxes so damn small?
  22. [ ] Make a faster IIR filter by running threshold  on signal to cut off negative values, then filter that, to allow for assymetric filters
  23. [ ] Find that weird bug that still exists when saving/loading files
  24. [ ] REFACTORING AS SOON AS STEPHEN/DANIELA'S ANALYSIS IS READY
          1) Make the list of models a global, so I don't have it scattered around everywhere in my code.
          2) Many repeated blocks of code have evolved and need to be destroyed.
          3) Paths have become a bit messy: grep for NARF_PATH and correct (also: replace with filesep when possible)
          4) Names probably could use some rethinking as well, especially defaults (like using 'stim' default even in the fitting algorithms, for example)
          5) Move the 'gui' stuff to a separate global structure?
          6) Cleaner way of building models in a script than accessing by index number?
          7) Look for obvious repetition and make some more functions in util/
          8) Remove/rename useless functions in util that have accumulated.
          9) In retrospect, 'plot_gui' stuff probably shouldn't be stored in the XXX or STACK structures...should it be in a 3rd structure?
          10) It's not quite right to have the 'replot' command be part of the the 'plot_popup fn callback'. Needs to be re-thought.
          11) Right now, you can only instantiate a single GUI at a time. Could this be avoided and the design made more general?
          12) Go through the TODO's in existing files
          13) Ensure that no closures of data are being done by methods. Methods should accept the module object as their first argument, not close over anything.
          14) make anything named 'do_' into a method for use with modules?
          15) make anything named 'update_' into a function used purely for its side effects
  25. [ ] Build a non-cheating model which extracts envelopes directly from the WAV files using a prefilter
  26. [ ] Why can't I edit the type of module in the MIDDLE of the stack with the GUI? Right now you can only use the dropdown to change the last one.
  
* DESIGN QUESTIONS TO BRAINSTORM:
  1. [X] How can sane initial conditions for optimization be automatically arrived at without extra script-writing?
	 Auto-initialization of model params is done by allowing modules to update their design based on the data by calling the optional 'auto_init' method.
	 Arg 1 is the STACK, not including the model itself. 
	 Arg 2 is the XXX data input, not including the model's output data itself. 
  2. [X] How can jack-knifing be integrated in to the optimization routine to prevent over-fitting?
	 Split the big long RESP and STIM vectors in fit_with_lsqcurvefit into 10 chunks
	 Take groups of 9 of those chunks, run lsqcurvefit, then test on remaining chunk
	 Take weighted average of all jackknifed solutions, weighting each by inverse variance?
	 Return weighted average.
  3. [X] How should optimization constraints be incorporated in the design?
	 Probably the easiest way is to define a structure which may be used by pack/unpack to create upper and lower bounds, which are then passed to the optimization routine
	 opt_hints = struct('alpha', [-1 3], 'beta', [0 inf]); % Constrain alpha from -1 to 3 and beta from 0 to infinity. 
  4. [X] How should models be automatically generated in a quick and scriptable way?
	 See analysis/test_likely_candidates.m
  5. [X] How can design internal degrees of freedom be detected and corrected during optimization?
	 (Probably they cannot!)
  6. [ ] IF we only have one data file, how can we hold out some fraction of the stimuli so that we can to training/test on a single data file?
	  
* DISCUSSIONS
  Observation: Be very careful using sigmoid nonlinearity: it tends to squash data into two groups. It almost always helps to widen the sigma parameter before fitting again.

* LATER TODO LIST
  1. [ ] Add a module which can pick out a particular dimension from a vector and give it a name as a signal
  2. [ ] Make inter_spike_intervals work
  3. [ ] Try -r instead of '1/r^2" as the correlation score 
  4. [ ] Make a faster but less general version of Stephen's IIR filter
  5. [ ] Make bayesian_likelihood() work
  6. [ ] Make Concat Second Order Terms work for any higher order nchoosek type stuff
  7. [ ] Write a 'scaled boosting' algorithm, which takes a step in the direction inversely proportional to power of that channel (reweighting the channels by their power, essentially)
  8. [ ] Get linear_fit_with_preprocessing working again (working from a WAV file, that is)
  9. [ ] Make gammatone filter bank work like elliptic bandpass filter so interface is standard
  10. [ ] Provide functions to cover the input space logarithmically with filters
  11. [ ] Write a crash course guide on using NARF
  12. [ ] Remember to invalidate data BELOW the present point on a table-edit callback... and to update the gui to reflect this!
  13. [ ] Make logging work for the GUI by including the log space in narf_modelpane?
  14. [ ] Delete the GUI objects whenever you 'apply' since they may need to be recreated?
  15. [ ] Write a 'conjugate boosting' algorithm, which is normal boosting but takes steps in a single direction until the objective function stops improving.
  16. [ ] Write several different performance metric functions: MSE and a point-process fit
  17. [ ] Write a jack-knifing optimization which can work with any of the optimization modules 
  18. [ ] Single channel gammatone filter (for speed, once sensitivity has been identified)
  19. [ ] Add a method to "save analysis", connecting the stimfile train/test sets, model structure and params, optimization method, and GIT code hash number all together in a single, savable structure.
  20. [ ] Add error handling (catch/throw) around EVERY CALL to a user defined function
  21. [ ] Add a GUI button to load_stim_from_baphy to play the stimulus as a sound?
  22. [ ] Put a Button on the performance metric that launches an external figure if more plot space is needed.
  23. [ ] Make it so baphy can be run _twice_, so that raw_stim_fs can be two different values (load envelope and wav data simultaneously)
  24. [ ] Suggest an improvement: Use BAPHY to cache intermediate values, and store results
	  
* LUXURY, UNESSENTIAL TODO ITEMS 
  - [ ] Make raw/stimulus response have two dropdowns to pick out colorbar thresholds for easier visualization
  - [ ] Add a filter that processess phase information from a stimulus, not just the magnitude
  - [ ] Write a function which swaps out the STACK into the BACKGROUND so you can 'hold' a model as a reference and play around with other settings, and see the results graphically by switching back and forth.
  - [ ] Write dbchoosecellfiles()
  - [ ] Use inter_curve_v3 to interactively make FIR things
  - [ ] Try adding color to histograms and scatter plots
  - [ ] Try improving contrast of various intensity plots
  - [ ] Add BIC or AIC to model comparison data
  - [ ] Optimization report card and status information logged
  - [ ] Rank model fits and plot correlations
  - [ ] New training method:
	1. Search for coefficients from a spanning filter bank
        2. Find the signal contributing most (using the FIR coefficients)
	3. Do a second filter bank that is only an octave wide, with the signal in the center, to get more substructure
	   
