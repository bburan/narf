* LEFT OFF HERE:
  - Commit my code!
  - Restructure all the computation into a sequence of function calls from a single big ANALYZE FILES function. 
  - Automatic analysis can occur simply by having checkboxes on the left, or manually by leaving them unchecked
  - Draw a pretty diagram of what I have now.
  - Put meeting notes in my good binder
  - Check to make sure that I am doing the prefiltering in the right way...the ferquencies might be half or double what I think I am doing!
  - Write a better dbchoosecellfiles(), linking it to STRFs
  - Write a 'automatic multiple band' filter, which presents downsampled results of gamma or elliptical notched filters spaced across the domains
  - Make the prefilter LOADABLE from 
  - Make a second prefilter (full-coverage gammatone bank)
  - Make a 3rd prefilter (full-coverage elliptic filter bank)
  - Set the spectrogram as the default data view
  - Present the rasterization of the response as dots, not as lines, to display MORE info
  - Increase the size of the GUI viewports  and clean up the labeling

* Ask Stephen:
  - [ ] Split keyboard?
  - [ ] Constraints on the boosting should be only positive coefficients?
* Possible refactoring
  1. Data ordering is perhaps nonstandard, since we need filter(B,A,X,[],2) instead of filter(B,A,X);
  2. Should PREFILTEREDSTIM be a 3D matrix, or is it more convenient to use as a mixture of cell array and 2H matrices.? 
     STIM [30x400000] (30 tones with 400000 samples in time each)
     RESP [30x400000x3] (3 reps)
     PREFILTEREDSTIM{numoffilters} and under each cell [30x400000]
  3.  Rewrite of dbchooserawfile() because it's so damn useful for selecting a file, but let's make it work for multiple stimulus files
      (Should also display well, site and have selectors for channel, unit, etc
  4. Use squeeze() to remove unneeded dimensions from a matrix.
* Small steps to take
  - [ ] Check that types of data structures don't change ( cell and 2D matrices for FIRCOEFS)
  - [ ] Add logging strings for everything
  - [ ] Try filtfilt to avoid affecting the phase of the response
  - [ ] tic/toc microbenchmarks...this thing is getting slow
  - [ ] Connect the boosting algorithm to the FIR parameter matrix and correlation coefficient
  - [ ] Write dbchoosecellfiles() and make it work for multiple selections.
  - [ ] Consider putting everything under a single GLOBAL 
  - [ ] Make code work for batch processing and without a GUI

* TOP TODO
  - [ ] TWO DATA SETS. Use the first as the training, and the second as the validation set. (You may also want to look at por010c)
	 (92955) 	por010b04_p_SPN.m 	300 (5) 	sorted: 2-1 2-2 - parms - psth
	 (92956) 	por010b05_p_SPN.m 	80 (20) 	sorted: 2-1 2-2 - parms - psth
  - [ ] Look at exptparams.TrialObject.ReferenceHandle object and figure out how to do two bandpass filters that give stimulus band info
  - [ ] Pick out files that all have really high SNR ratios
* CODE TO REVIEW LATER
  - [X] meska_pca()                              Used for doing the spike sorting, the front end. 
  - [ ] RemoteAnalysis/boost_online.m
  - [ ] Utilities/cacheevpspikes.m
  - [ ] cellDB/dbchooserawfile.m
  - [ ] Config/lbhb/BaphyMainGuiItems.m  has some hard-coded defaults for the GUI
  - [ ] Try messing with creating GUIs for structs using 'structdlg.m'
  - [ ] Consider the data for this: /auto/data/daq/Portabello/por010/por010c08_p_SPN
* LUXURY TODO
  - [ ] Use inter_curve_v3 to interactively make FIR things!
  - [ ] Make the stimulus data drive the windowing of the other visualizations
  - [ ] Try adding color to histograms and scatter plots
  - [ ] try improving contrast of various intensity plots
* Possible problems or hacks to study
  - [ ] Negative effects of discretization on Inter-Spike Intervals histogram estimation (Use known data)
  - [ ] Infer the average rate of spiking from the data, then fit your model against that inferred lambd without doing EM all the time.
* HIGH LEVEL TODO:
   1) [ ] GUI that lets you quickly try different models in a clicky sort of way
   2) [ ] Logging and recording multiple models and their performance
   3) [ ] Plots the STRF of the best-fitting model?
   4) [ ] Analyze:  'dai020a-c2', 'mag009b-b1', 'dai008a-c1', 'mag007d-d1' 
   5) [ ] Rank model fits and plot correlations
   6) [ ] Replicate Stephen's results with exitation/inhibition
* ModelFit GUI Design Brainstorm
* -----------------
* Data Selection
  TRAINING SET: por010b04_p_SPN.m    60 stimuli repeated 5 times each? 97% isolation on -b1
  TEST SET:     por010b05_p_SPN.m    4 stimuli repeated 20 times each? 99% isolation on -b1
  button: refresh from BAPHY? Or select cell ID?
  textbox: cellID#
  dropbox: channel
  dropbox: trial class of associated data (and # of responses?)
  textbox: report of relevant data about the data?
  textbox: stimulus frequency
  textbox: response bin size (set to 0 for continuous timings?)
  graph: Rendering of the sound
  dropbox: toggle between rendering of the sound with spectrogram or time
* Preprocessing
   dropbox: filter class
   graph: filter output
   dropbox: graph view in time, graph white noise filtered by this, or as a heat map?
   button: refresh graph
*** Envelope
    textbox: raster frequency
*** Single Gammatone
    textbox: center freq
    textbox: bandwidth
*** Gammatone filter bank
    textbox: min freq
    textbox: max freq
    textbox: num filters (or maybe, vector of filter center freqs, so I could pick just the few that are important?)
    checkbox: align phase
* Model Class
  dropbox: model
  pane with checkboxes (editable or not) and editboxes: model params       (Hidden: will need on-the-fly generated functions which map structs to vectors and back)
* Performance
** TODO: Add BIC or AIC to the model-comparison part of my figure
