* HIGH LEVEL GOALS:
  1. Somehow, make vocalization data (246) fits take < 1 day for IFN models.
     - Boosting algorithm correction to lessen n^2 performance scaling problem
       1) Not test-steping along every direction each time:
	  - Keep a list of the top N coefs. 9 out of 10 times, boost only on those. Rebuild models every 10-15 steps. 
       2) Boosting on individual models	  
  2. What can we do to produce more interpretable, clean, plausible results?
     - Models with fewer parameters or more general parameterizations? 
     - Perhaps per-cell intepretability is irrelevant; relative performance is all that matters for determining model importance?  
  3. How can we make these inter-model comparisons more straightforward? 
     - Update "insert into DB" fn to also compute BIC, AIC, Mutual Info, etc., and also total spike count, Signal to Noise Ratio. 
  4. Add more normalization so that fitting with default values becomes easier

* Queueing Plan
  - [ ] Repair bugs
	- Why does "inspect model" fail so often when loading?
	- Why no nonlinearities being shown in the preview
	- why no correlation updates
  - [ ] Queue new parametric NL
  - [ ] Queue new parametric compressors
  - [ ] Picking depfree, best NL and best compressor, find best fitter
  - [ ] Extract the ending conditions of many fitters and try to improve initial conditions
  - [ ] Plot of average fit times for 240 for all the fitters
  - [ ] With the best fitter, run a 2x2 analysis trying best few NLs and compressors
  - [ ] Record results for 240
  - [ ] Study which depression levels work best

* Possible experimental workflow in NarfAnalysis
    1. Spray & pray likely models (already automated)
    2. Pick 4-5 models as the best categories (already automated)
    3. For each grouping, scatter/histogram of extracted parameters 
       - Less variance makes us more certain of cell's categorization
       - Histograms comparing coefs of different categories interesting too.
    4. Make a new "Narf Batch Category" containing relevant cells for final analysis so they are more easily grouped
 
* Discuss with Stephen
  - Grant writing discussion with Stephen about Sept 3. 
  - Decile plots and best models

* Plots to Do:
  - Histogram Plot of depression parameters from depfree from 240
  - Histograms of parameters across a population, clustered by best-fitting model?
  - Histograms of logfree parameters
  - Overlap plots of all compressor curves
  - Time to fit vs performance for fitters
    
* Engineering:
  1. [ ] Fix bug: 
		OK: {'firno', 'firn', 'fir2n', 'firn2np', 'irn', 'irnr', 'firnpr', 'firnv2', 'depn', 'depno', 'depped', {'inex', 'init10'}}, 'nonl', 'mse', 'boost'} 
		Not OK: {'env100', 'log2b', {'firno', 'firn', 'fir2n', 'firn2np', 'irn', 'irnr', 'firnpr', 'firnv2', 'depn', 'depno', 'depped', {{'inex', 'init10'}}}, 'nonl', 'mse', 'boost'}

  2. [ ] Reduce, Plot function abstractions for working with STACKs of models
  3. [ ] After saving the model, but before database insertion, do other metrics
  4. [ ] NARF Architecture Improvements
	 - [ ] Allow queuing of not an entire analysis, but just a subset
	 - [ ] Backup database move the old models/images to backup directories which will be scanned
	 - [ ] Rename: VALIDATION/TEST  and EST/TRAINING 
	 - [ ] Start a new NarfModels table
	 - [ ] Define a new function to extract/update, from every model, all relevant fields of the database.
	 - [ ] Import useful models by scanning the directories, copying files and getting relevant metadata
	 - [ ] Check things loaded well with the narf browser completion tests
  5. [-] Default per-paramset, per-channel heatmap graph fns:
	 - [ ] Loadstimfrompbaphy
	 - [X] Nonrmalize channels
	 - [ ] FIR filter
	 - [ ] Nonlinearity
  6. [ ] Boosting Variants
         - [ ] Boosting Variant: variable step size boosting
         - [ ] Boosting variant: Cheat and stop whenever the validation set error goes up.
         - [ ] Boosting variant: terminate when last N times the 10% held out data error has gone up 
  7. [ ] Safety check so that these modules do not allow unifiers/splitters
         - Correlation, MSE, bayesian, loader, etc
	 - Split normalization or not?
  8. [ ] Repair Fitters 
         - [ ] Remove, then re-add test_set data by default to make fitters faster
         - [ ] How will LSQ and sparsebayes modules work with a generic META.performance_metric() function?
  9. [ ] Fix Irregularities
         - Not all nonlinearities can accomodate NaNs in their code, especially in stim
         - I think NPNL (or Normalize channels) is having a freak out when the FIR coefs are zero. 
         - fit_sparsebayes.m, fit_lsq.m, and fit_lsqnonlin.m do not respect META.performance_metric()
         - Jackknifing doesn't work with performance metrics besides MSE right now?
  10. [ ] Profile and look for optimizations:
          - Is there a way to speed up NPNL? Unique is DOG SLOW because it sorts.
          - Write a FIR speed booster, which uses N vectors (one per FIR coef, which re a product with the stimulus). Each boost step, only 1 coef need be updated.
  12. [ ] Write a crash course guide on using NARF 

* Experiments:
  1. [ ] Different parameterization of a sigmoid (corners, etc)
	 5-parameter sigmoid model	 
  2. [ ] Really Simple Model
	 Logfit (1 parm) + scale & delay amount per channel (2*n parms) + respavg-estimated stateful depression amount (2*n parms)
  3. [ ] Probabilistic FIR filters
	 + Per-coefficient probabilistic distributions to replace FIR filters
	 + After training, can we get an idea of the STRF variance via reverse correlation?
	   1) Start from RESPAVG signal at end
	   2) Numerically zero-find to estimate the pre-NPNL stimulus, starting from the estimate from the forward pass
	   3) For each filter coeff, push in the reverse-correlated distribution (several thousand points)
	   4) Plot the histograms for each FIR coef as a line plot. 
	 + Plotting the error bars on the filter would also be REALLY GOOD 
  4. [ ] Non-Parametric Wavelets for feature extraction
	 + Make a spike-triggered average filter bank instead of a gammatone
         + Plot STA distributions of sound intensities at each delay (i.e. make a heatmap)
  5. [ ] Non-Parametric activity-scaled auto-correlation to find time-varying response
	 + Idea: Do NPNL-like transform to autocorrelated ISI data
	 + Idea: Sort spikes by ISI times
	    * Take STA/STC of each quartile.
	    * Are they different? If so, we have proof that model is nonstationary.
  6. MEGA-META compressor (one channel for every compressor and a weighting!)
  7. [ ] Estimating Time-Varying State
	 + What if we use RESPAVG to compute the depression state, and fit the depression amounts to that?
  8. [ ] Can I make a time-compensating autocorrelation NPNL?
  11. [ ] Possible features to extract (And what what is needed to detect them)
          - Spatial location of source (Phase difference or not)
          - Freq (STRF)
          - Freq direction rising/falling (STRF with diagonal band)
          - Pitch (STRF with harmonics)
          - Timbre (STRF with harmonics)
          - Vowels, Consonants 
          - Onsets, offturns (STRF)

  10. [ ] GMM without slow EM step:
	   For each point, take K nearest neighbors. 
	   Compute 2D gaussian for that point. 
	   Flatten that 2D gaussian and push into SENL's 1D input
  11. [ ] ABCD Control Blocks with arbitrary functions (start with 1st and second degree polynomials)
  12. [ ] How well does the MSECHEAT algorithm do?
	  (Tries several different sparsity values in sequence, then picks the best one)
  13. [ ] Make a gain-changing filter, something like a FIR but with per-pixel gains? After all, by the time the signal reaches cortex, neural responses are likely
  14. [ ] Do a FIR filter of the output of a FIR filter to get features
  15. [ ] Test out making layered exponentials (exp of an exp of an exp, etc)
  16. [ ] Try to remove systemic bias of input by having a positive and a negative input? How did that work in the triggered correlation thing?
  17. [ ] Is it better to bin, reload from baphy, resample, downsaple, decimate, convolve, smooth, or infer respavg?
          Try decimate, or resample (@(x,n) abs(decimate(x,n)),  @(x,n) abs(resample(x,1,n))  

* LOW PRIORITY CLEANUP
  1. [ ] Grep for TODO's, FIXME's, etc in existing files and add them to this list
  2. [ ] Plot a SINGLE paramset's SINGLE high-bandwidth channel as a spectrogram
  3. [ ] Replace all the 'true' and 'false' arguments with textual flags and varargin that are more descriptive
  4. [ ] It's not quite right to have the 'replot' command be part of the the 'plot_popup fn callback'. Needs to be re-thought
  5. [ ] Can functions in the keywords directory be set so the 'current folder path' is NOT accidentally giving access to other keyword directory functions?
  6. [ ] Add error handling (catch/throw) around EVERY CALL to a user defined function, trigger popup?
  7. [ ] MODULE: Build a non-cheating model which extracts envelopes directly from the WAV files using an elliptic or gammatone prefilter
  8. [ ] MODULE: Add a module which can pick out a particular dimension from a vector and give it a name as a signal
  10. [ ] MODULE: Standardized single/multi channel gammatone filter
  11. [ ] MODULE: Standardized single/multi channel elliptic filter 
  12. [ ] FN: Cover an input space logarithmically with filters

* THE GREAT NAME REPLACING PROPOSAL
  1. [ ] "training set" -> "estimation set"
  2. [ ] "test set" -> "Validation set"
  3. [ ] NarfResults -> NarfModels table
  6. [ ] WHATEVER IS GOING INTO XXX{1} should be given to fit_single_model as well! When I'm not using BAPHY it should still be able to work.
  7. [ ] Name convention of STACK vs stack, XXX vs xxx and the difficulty in understanding which one we are looking at! 
	 Lots of hidden assumptions here which are a problem. Plot modules have access to AFTER data, too.

* Order these books Eventually
  Wavelets (Gilbert Strang)
  Bayesian Data Analysis, Second Edition (Chapman & Hall/CRC Texts in Statistical Science) (Gelman)
  Doing Bayesian Data Analysis: A Tutorial with R and BUGS  (John K. Kruschke)
  Analysis - Steven Lay
  Naive Set Theory - Halmos
  Matrix Analysis for Scientists and Engineers" by Alan Laub (Tensors)
  Generalized Linear Models
  Generalized Additive models
  Bayesian model comparison
  Bayesian neural modeling

* DISCARDED/ABANDONED IDEAS
  1. [ ] FN: 'set_module_field' (finds module, sets field, so you can mess with things more easily in scripts)
  2. [ ] Push all existing files into the database
  3. [ ] MODULE INIT: Make a module which has a complex init process
	 1) Creates a spanning filterbank of gammatones
	 2) Trains the FIR filter on that spanning filterbank
	 3) Picks the top N (Usually 1, 2 or 3) filters based on their power
	 4) Crops all other filters
  4. [ ] FIX POTENTIAL SOURCE OF BUGS: Not all files have a META.batch property (for 240 and 242)
  5. [ ] A histogram heat map of model performance for each cell so you can see distribution of model performance (not needed now that I have cumulative dist plotter)
  6. [ ] If empty test set is given for a cellid, what should we do? Hold 1 out cross validation? 
  7. [ ] Fix EM conditioning error and get gmm4 started again (Not sure how to fix!)
  8. [ ] Address question: Does variation in neural fuction in A1 follow a continuum, or are there visible clusters?
  9. [ ] A 2D sparse bayes approach. Make a 2D matrix with constant shape (elliptical, based on local deviation of N nearest points) to make representative gaussians, then flatten to 1D to make basis vectors fed through SB.
  10. [ ] CLEAN: Compare_models needs to sort based on training score if test_score doesn't exist.
  11. [ ] FITTER: Regularized boosting fitter
  12. [ ] FITTER: Automatic Relevancy Determination (ARD) + Automatic Smoothness Determination (ASD)
  13. [ ] FITTER: A stronger shrinkage fitter (Shrink by as much as you want).
  14. [ ] FITTER: Three-step fitter (First FIR, then NL, then both together).
  15. [ ] FITTER: Multi-step sparseness fitters (Fit, sparseify, fit, sparsify, etc). Waste of time
  16. [ ] MODULE: Make a faster IIR filter with asymmetric response properties 
  17. [ ] Make logging work for the GUI by including the log space in narf_modelpane?
  18. [ ] IRRITATION: Why doesn't 'nonlinearity' module default to a sigmoid with reasonable parameters?
  19. [ ] IRRITATION: Why isn't there progress in the GUI when fitting?
  20. [ ] IRRITATION: Why isn't there an 'undo' function?
  21. [ ] IRRITATION: Why can't I edit a module type in the middle of the stack via the GUI?
  22. [ ] Right now, you can only instantiate a single GUI at a time. Could this be avoided and the design made more general?	  
	  To do this, instead of a _global_ STACK and XXX, they would be closed-over by the GUI object.
	  Then, there would need to be a 'update-gui' function which can use those closed over variables.
	  That fn could be called whenever you want to programmatically update it. 	  	  	 
  23. [ ] Make gui plot functions response have two dropdowns to pick out colorbar thresholds for easier visualization?
  24. [ ] Make it so baphy can be run _twice_, so that raw_stim_fs can be two different values (load envelope and wav data simultaneously)
  25. [ ] MODULE: Add a filter that processess phase information from a stimulus, not just the magnitude
  26. [ ] Write a function which swaps out the STACK into the BACKGROUND so you can 'hold' a model as a reference and play around with other settings, and see the results graphically by switching back and forth.
  27. [ ] Try adding informative color to histograms and scatter plots
  28. [ ] Try improving contrast of various intensity plots
  29. [ ] Put a Button on the performance metric that launches an external figure if more plot space is needed.
  30. [ ] Add a GUI button to load_stim_from_baphy to play the stimulus as a sound
  31. [ ] FITTER: Crop N% out fitter:
	    1) quickfits FIR
	    2) then quickfits NL
	    3) measures distance from NL line, marks the N worst points
	    4) Looks them up by original indexes (before the sort and row averaging)
	    5) Inverts nonlinearity numerically to find input
	    6) Deconvolves FIR to find the spike that was bad
	    7) Deletes that bad spike from the data
	    8) Starts again with a shrinkage fitter that fits both together
  32. [ ] Expressing NL smoothness regularizer as a matrix
	    A Tikhonov matrix for regression: 
	    diagonals are variance of each coef.
	    2nd diagonals would add some correlation from one FIR coef to the next (smoothness?).
  33. [ ] Sparsity check:
	   For each model,
              for 1:num coefs
               Prune the least important coef
		plot performance
              Make a plot of the #coefs vs performance
  34. [ ] A check of NL homoskedasticity (How much is the variance changing along the abscissa)	     
  35. [ ] FITTER: SWARM. Hybrid fit routine which takes the top N% of models, scales all FIR powers to be the same, then shrinks them.
  36. [ ] Get a histogram of the error of the NL. (Is it Gaussian or something else?)
  37. [ ] Have a display of the Pareto front (Dominating models with better r^2 or whatever)
  38. [ ] FN: Searches for unattached model and image files and deletes them
  39. [ ] Models need associated 'summarize' methods in META
	  Why: Need to extract comparable info despite STACK positional differences in model structure.
	  Why: Need a general interface to plot model summaries for wildly different models
	  Difficulty: Auto-generated models will need some intelligence as to how to generate summarize methods for themselves
  40. [ ] DB Bug Catcher which verifies that every model file in /auto/data/code is in the DB, and correct
	  Why: Somebody could easily put the DB and filesystem out of sync.
	  Why: image files could get deleted
	  Why: DB table could get corrupted
	  Why: Also, we need to periodically re-run the analysis/batch_240.m type scripts to make sure they are all generated and current
  41. [ ] Put a line in fit_single_model that pulls the latest GIT code before fitting?
  42. Fit combo: revcorr->boost (what we do now)
  43. Fit combo: revcorr->boost->sparsify->boost   (Force sparsity and re-boost)
  44. Fit combo: prior->boost
  45. Fit combo: revcorr->boost_with_increasing_sparsity_penalty
  46. Fit combo: revcorr->boost_with_decreasing_sparsity_penalty
  47. Fit combo: zero->boost 
  48. Fit combo: Fit at 100hz, then use that to init a fit at 200Hz, then again at 400Hz.
  49. Replace my nargin checks with "if ~exist('BLAH','var'),"
  50. sf=sf{1}; should be eliminated IN EVERY SINGLE FILE! 
  51. [ ] FIR filter needs an 'ACTIVE FIR COEFS' plot which only displays paramsets matching selected
  52. [ ] IRRITATION: Why can't I resize windows?
  53. Stephen will do the init condition for FIRN coefs split into two filters of positive/negative coefs only    
  54. Write a termination condition that ends when "delta = 10^-5 * max-delta-found-so-far" for boosting
  55. Why an FPGA would kick ass for this stuff(You could try all 300 coefficient boosting steps simultaneously, this is an embarassingly parallel problem)
  56. Crazyboost
      How's this for a fitter?
      Boosting works well, and tries every possible step before taking a new one.
      That's good and deterministic, but maybe we could speed things up by randomly sorting the steps (so as not to be biased towards early values)
      Then just take a step _any_ time it improves the score
      It would take many more steps each iteration.
      No guarantee it would converge, but maybe we could do it just to get started more quickly
  57. Can Jackknifes be stored in the same model file? (No, this should not be done.)
  58. SAFETY VERIFICATION PROGRAM:
    + Create a test/ directory with many test functions in it
      Each test function:
      - creates a default XXX{1}
      - Puts a single module on the stack
      - Recomputes XXX(1)
      - Checks output vs predetermined values
    + Check that all modules work independently as expected
    + Checks that DB and modelfiles still sync up
  59. Rewrite JOBS system
      + Put a "Complete?" 
      + Any number of PCs query the DB, try to get 'incomplete' flagged models. DB is atomic, handles conflicts and negates need for server.
      + They compute those models, then return values.
      + If desired, a local 'manager' on each PC can watch processes, handle timeouts, etc
      + Negates need for SSH credentials everywhere, too.
  60. Improve BAPHY Interface
      - Right now BAPHY has a complicated interface for a simple thing:
      - All we really want is the stimulus and response(s)
      - Selecting data ourselves, jackknifing it, hacking it out, etc are messy since half of it is done in Baphy and half in NARF
** Make Fitters understand how to work on each paramset separately?
   - I wish we could, but this is impossible. Right now, there is a subtle problem when we use a splitter on the FIR filter:
   - Boosting slows down 5x. We have 5x24 = 120 parameters per boost step. 
   - Fitting in one split regime is subtely interacting with fitting in another. Early stopping worsens this effect.
   - However, this cannot be done. Perhaps we are trying to fit a nonlinearity across all models; we cannot fit each separately. 
** Try this:
   http://www.mathworks.com/matlabcentral/fileexchange/27662-evolve-top-and-bottom-envelopes-for-time-signals-i-e
   Should also query the database to see if a job is queued already, and list a Q
   Add intelligence to boostperfile that
   DOES split the normalization
   DOES split any module that is not a performance metric or a loader
   Put a breakpoint in boostperfile, check that the predictions are fine, then let the merge occur, then check the predictions again
  5. [ ] Repair Narf Browser
	 - [ ] Antialiasing problem when saving images
	 - [ ] AND/OR/NOT query token filter, or 'In position 3' filter
	 - [ ] Arbitrary keyword substring stuff
         - [ ] The total number of spikes in each behavior respfile should be displayed?
  10. [ ] Add new functionality to the do_scatter_plot method
	  - [ ] Instead of plotting a scatter plot as points, use a fine-grid HEAT MAP
		Use grayish/blackish 
  4. [ ] Manual verification of per-file splits.
	 - [ ] If I manually train 5 models on each thing, then recombine them, do I get the same results?
	 - [ ] Is correlation being calculated properly?
	 - [ ] If we NAN out the respfiles instead of removing them completely, does that avoid the normalization bug problem?
         - [ ] Are we splitting and unifying on the files trained upon?
         - [ ] Is the training R^2 usually higher than the test?
         - [ ] Does MSES have an effect?
         - [ ] Normalization is done across files or not?
Didn't work well: test/train scatter plot with dot coloring by cellid or model type
  9. [ ] FITTER (containing a list of available fitters?)
  - Pack and unpack accept optional arguments to pack only a particular number
    - Requires changing interface to fit algorithms?
  - Provide a "Coefficient mask" that fits only certain params?
  - [ ] What are the error bounds on all of our filters and predictions? Without error bounds, we are not doing science. 
  4. [ ] XXX, META (Modelinfo?), STACK
	 - [ ] Run "Plot_sparsity" scripts at end and remove all but the top N coefficients 
  5. [ ] DC offset of the RESPAVG helps? 
	 - [ ] Script to parametrize FIR filters 
          - Aha! If I wrote a FASTFILTER closed-over function, and provided it with a way to update its closed-over vector in response to a boost step, I could use the same code for both fast FIR filtering and NPFNL? No, wait, that wouldn't work...the stimulus changes EVERY single time.
